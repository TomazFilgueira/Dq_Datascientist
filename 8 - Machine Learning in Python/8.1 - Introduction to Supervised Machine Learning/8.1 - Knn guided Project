{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["HvsAjgvmSR9L","3Aev97kzSZe8","vBesIK0yS54O","WAXVfvtlb-E9"],"authorship_tag":"ABX9TyPptOP9YwvEeeNRX97YEcGZ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Cardiovascular Deseease Prediction\n","\n","We are working for an R&D company that focuses on providing healthcare solutions. The company has collected anonymized data from** multiple hospitals on several patients**\n","\n","We are tasked with using the dataset to accurately predict the **likelihood of a new patient having heart disease** in the future.\n","\n","`Age`: age of the patient [years]\n","\n","`Sex`: sex of the patient [M: Male, F: Female]\n","\n","`ChestPainType`: chest pain type [TA: Typical Angina, ATA: Atypical Angina, NAP: Non-Anginal Pain, ASY: Asymptomatic]\n","\n","`RestingBP`: resting blood pressure [mm Hg]\n","\n","`Cholesterol`: serum cholesterol [mm/dl]\n","\n","`FastingBS`: fasting blood sugar [1: if FastingBS > 120 mg/dl, 0: otherwise]\n","\n","`RestingECG`: resting electrocardiogram results [Normal: Normal, ST: having ST-T wave abnormality (T wave inversions and/or ST elevation or depression of > 0.05 mV), LVH: showing probable or definite left ventricular hypertrophy by Estes' criteria]\n","\n","`MaxHR`: maximum heart rate achieved [Numeric value between 60 and 202]\n","\n","`ExerciseAngina`: exercise-induced angina [Y: Yes, N: No]\n","\n","`Oldpeak`: oldpeak = ST [Numeric value measured in depression]\n","\n","`ST_Slope`: the slope of the peak exercise ST segment [Up: upsloping, Flat: flat, Down: downsloping]\n","\n","`HeartDisease`: output class [1: heart disease, 0: Normal]"],"metadata":{"id":"G9LNB_-5J_KN"}},{"cell_type":"markdown","source":["# import Libraries"],"metadata":{"id":"LiNT5A1CK5r7"}},{"cell_type":"code","source":["# import libraries\n","import pandas as pd\n","\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.model_selection import train_test_split, GridSearchCV\n","from sklearn.metrics import accuracy_score\n","from sklearn.neighbors import KNeighborsClassifier\n","\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","%matplotlib inline"],"metadata":{"id":"7omEGb5fK9ye","executionInfo":{"status":"ok","timestamp":1740926658337,"user_tz":180,"elapsed":7,"user":{"displayName":"Tomaz Filgueira","userId":"15508579070858102815"}}},"execution_count":26,"outputs":[]},{"cell_type":"markdown","source":["#Read dataset"],"metadata":{"id":"KvCHoCagLDfZ"}},{"cell_type":"code","execution_count":4,"metadata":{"id":"z77E93wjJ7CI","executionInfo":{"status":"ok","timestamp":1740925130372,"user_tz":180,"elapsed":31,"user":{"displayName":"Tomaz Filgueira","userId":"15508579070858102815"}}},"outputs":[],"source":["#heart desease prediction - hdp\n","\n","hdp_data = pd.read_csv('heart_disease_prediction.csv')"]},{"cell_type":"markdown","source":["#Exploring first lines"],"metadata":{"id":"cpSNa-d6OWYz"}},{"cell_type":"code","source":["hdp_data.head()\n","shape = hdp_data.shape\n","print(shape)\n","hdp_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":244},"id":"4xaLVIgrOZUP","executionInfo":{"status":"ok","timestamp":1740932747880,"user_tz":180,"elapsed":39,"user":{"displayName":"Tomaz Filgueira","userId":"15508579070858102815"}},"outputId":"4eb5b5e6-5f10-4e77-dd07-f04f787626fb"},"execution_count":122,"outputs":[{"output_type":"stream","name":"stdout","text":["(918, 12)\n"]},{"output_type":"execute_result","data":{"text/plain":["   Age Sex ChestPainType  RestingBP  Cholesterol  FastingBS RestingECG  MaxHR  \\\n","0   40   M           ATA        140          289          0     Normal    172   \n","1   49   F           NAP        160          180          0     Normal    156   \n","2   37   M           ATA        130          283          0         ST     98   \n","3   48   F           ASY        138          214          0     Normal    108   \n","4   54   M           NAP        150          195          0     Normal    122   \n","\n","  ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n","0              N      0.0       Up             0  \n","1              N      1.0     Flat             1  \n","2              N      0.0       Up             0  \n","3              Y      1.5     Flat             1  \n","4              N      0.0       Up             0  "],"text/html":["\n","  <div id=\"df-b061901e-30b1-4da1-a755-cf909d469652\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>ChestPainType</th>\n","      <th>RestingBP</th>\n","      <th>Cholesterol</th>\n","      <th>FastingBS</th>\n","      <th>RestingECG</th>\n","      <th>MaxHR</th>\n","      <th>ExerciseAngina</th>\n","      <th>Oldpeak</th>\n","      <th>ST_Slope</th>\n","      <th>HeartDisease</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>40</td>\n","      <td>M</td>\n","      <td>ATA</td>\n","      <td>140</td>\n","      <td>289</td>\n","      <td>0</td>\n","      <td>Normal</td>\n","      <td>172</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>49</td>\n","      <td>F</td>\n","      <td>NAP</td>\n","      <td>160</td>\n","      <td>180</td>\n","      <td>0</td>\n","      <td>Normal</td>\n","      <td>156</td>\n","      <td>N</td>\n","      <td>1.0</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>37</td>\n","      <td>M</td>\n","      <td>ATA</td>\n","      <td>130</td>\n","      <td>283</td>\n","      <td>0</td>\n","      <td>ST</td>\n","      <td>98</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>48</td>\n","      <td>F</td>\n","      <td>ASY</td>\n","      <td>138</td>\n","      <td>214</td>\n","      <td>0</td>\n","      <td>Normal</td>\n","      <td>108</td>\n","      <td>Y</td>\n","      <td>1.5</td>\n","      <td>Flat</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>54</td>\n","      <td>M</td>\n","      <td>NAP</td>\n","      <td>150</td>\n","      <td>195</td>\n","      <td>0</td>\n","      <td>Normal</td>\n","      <td>122</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>Up</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b061901e-30b1-4da1-a755-cf909d469652')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b061901e-30b1-4da1-a755-cf909d469652 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b061901e-30b1-4da1-a755-cf909d469652');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6eb9f55b-6087-4e08-8fc9-2401cda1082a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6eb9f55b-6087-4e08-8fc9-2401cda1082a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6eb9f55b-6087-4e08-8fc9-2401cda1082a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"hdp_data","summary":"{\n  \"name\": \"hdp_data\",\n  \"rows\": 918,\n  \"fields\": [\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 28,\n        \"max\": 77,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          44,\n          68,\n          66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"F\",\n          \"M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ChestPainType\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"NAP\",\n          \"TA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RestingBP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 0,\n        \"max\": 200,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          165,\n          118\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cholesterol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 109,\n        \"min\": 0,\n        \"max\": 603,\n        \"num_unique_values\": 222,\n        \"samples\": [\n          305,\n          321\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FastingBS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RestingECG\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Normal\",\n          \"ST\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MaxHR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 60,\n        \"max\": 202,\n        \"num_unique_values\": 119,\n        \"samples\": [\n          132,\n          157\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ExerciseAngina\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Y\",\n          \"N\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Oldpeak\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0665701510493233,\n        \"min\": -2.6,\n        \"max\": 6.2,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          1.3,\n          0.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ST_Slope\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Up\",\n          \"Flat\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HeartDisease\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":122}]},{"cell_type":"markdown","source":["#EDA: Descriptive Statistics\n","Lets identify how many columns are numerical and categorical"],"metadata":{"id":"i30BrdIdOY0x"}},{"cell_type":"markdown","source":["#Dataset columns\n","\n","`Age`: age of the patient [years] - **numerical**\n","\n","`Sex`: sex of the patient [M: Male, F: Female] - **categorical**\n","\n","`ChestPainType`: chest pain type [TA: Typical Angina, ATA: Atypical Angina, NAP: Non-Anginal Pain, ASY: Asymptomatic] - **categorical**\n","\n","`RestingBP`: resting blood pressure [mm Hg] - **numerical**\n","\n","`Cholesterol`: serum cholesterol [mm/dl] - **numerical**\n","\n","`FastingBS`: fasting blood sugar [1: if FastingBS > 120 mg/dl, 0: otherwise] - **categorical**\n","\n","`RestingECG`: resting electrocardiogram results [Normal: Normal, ST: having ST-T wave abnormality (T wave inversions and/or ST elevation or depression of > 0.05 mV), LVH: showing probable or definite left ventricular hypertrophy by Estes' criteria] - **categorical**\n","\n","`MaxHR`: maximum heart rate achieved [Numeric value between 60 and 202] - **numerical**\n","\n","`ExerciseAngina`: exercise-induced angina [Y: Yes, N: No] - **categorical**\n","\n","`Oldpeak`: oldpeak = ST [Numeric value measured in depression]  - **numerical**\n","\n","`ST_Slope`: the slope of the peak exercise ST segment [Up: upsloping, Flat: flat, Down: downsloping] - **categorical**\n","\n","`HeartDisease`: output class [1: heart disease, 0: Normal] - **categorical**\n","\n","We will start by exploring and analyzing the numerical columns."],"metadata":{"id":"gZksuU6ZPUaY"}},{"cell_type":"markdown","source":["#Analyzing Numerical Columns"],"metadata":{"id":"HvsAjgvmSR9L"}},{"cell_type":"code","source":["print(hdp_data.describe(),'\\n') #show all statistics\n","\n","# Checking for missing values using isnull()\n","missing_values = hdp_data.isnull()\n","\n","print(missing_values.value_counts())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XOT1zPbDPIn1","executionInfo":{"status":"ok","timestamp":1740926320951,"user_tz":180,"elapsed":32,"user":{"displayName":"Tomaz Filgueira","userId":"15508579070858102815"}},"outputId":"949e5bcb-0b56-4e1e-a643-b78d593358a3"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["              Age   RestingBP  Cholesterol   FastingBS       MaxHR  \\\n","count  918.000000  918.000000   918.000000  918.000000  918.000000   \n","mean    53.510893  132.396514   198.799564    0.233115  136.809368   \n","std      9.432617   18.514154   109.384145    0.423046   25.460334   \n","min     28.000000    0.000000     0.000000    0.000000   60.000000   \n","25%     47.000000  120.000000   173.250000    0.000000  120.000000   \n","50%     54.000000  130.000000   223.000000    0.000000  138.000000   \n","75%     60.000000  140.000000   267.000000    0.000000  156.000000   \n","max     77.000000  200.000000   603.000000    1.000000  202.000000   \n","\n","          Oldpeak  HeartDisease  \n","count  918.000000    918.000000  \n","mean     0.887364      0.553377  \n","std      1.066570      0.497414  \n","min     -2.600000      0.000000  \n","25%      0.000000      0.000000  \n","50%      0.600000      1.000000  \n","75%      1.500000      1.000000  \n","max      6.200000      1.000000   \n","\n","Age    Sex    ChestPainType  RestingBP  Cholesterol  FastingBS  RestingECG  MaxHR  ExerciseAngina  Oldpeak  ST_Slope  HeartDisease\n","False  False  False          False      False        False      False       False  False           False    False     False           918\n","Name: count, dtype: int64\n"]}]},{"cell_type":"markdown","source":["###insights per columns\n","`Age` - mean: 53 year\n","\n","`RestingBP` , `Cholesterol` - have min value as zero. it should be something above zero\n","\n","There is no missing data"],"metadata":{"id":"dcQqUoGjQWrC"}},{"cell_type":"markdown","source":["#Analyzing Categorical Columns\n","Lets plot some visualizations\n","\n","1- Calculate the number of missing values in all columns.\n","\n"],"metadata":{"id":"3Aev97kzSZe8"}},{"cell_type":"markdown","source":["##Missing Values\n","There are no missing values in the dataset"],"metadata":{"id":"vBesIK0yS54O"}},{"cell_type":"code","source":["hdp_data.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":460},"id":"M45tLdqmRQQM","executionInfo":{"status":"ok","timestamp":1740926294038,"user_tz":180,"elapsed":7,"user":{"displayName":"Tomaz Filgueira","userId":"15508579070858102815"}},"outputId":"eadf1ee6-413c-4a5c-9933-d203f45214f8"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Age               0\n","Sex               0\n","ChestPainType     0\n","RestingBP         0\n","Cholesterol       0\n","FastingBS         0\n","RestingECG        0\n","MaxHR             0\n","ExerciseAngina    0\n","Oldpeak           0\n","ST_Slope          0\n","HeartDisease      0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Age</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sex</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ChestPainType</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>RestingBP</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Cholesterol</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>FastingBS</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>RestingECG</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>MaxHR</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ExerciseAngina</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Oldpeak</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>ST_Slope</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>HeartDisease</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["## Plot categorical columns\n","\n","2- For every categorical column in the dataset create a bar chart that displays the number of rows for each category of that column"],"metadata":{"id":"zZJuJH9XS_Rm"}},{"cell_type":"code","source":["cat_data = [hdp_data['Sex'],\n","            hdp_data['ChestPainType'],\n","            hdp_data['FastingBS'],\n","            hdp_data['RestingECG'],\n","            hdp_data['ExerciseAngina'],\n","            hdp_data['HeartDisease']]\n","fig, axes = plt.subplots(2, 3, figsize=(16, 15))  # 2 rows, 3 columns\n","\n","axes = axes.flatten()  # Flatten the axes array for easier iteration\n","\n","for i, series in enumerate(cat_data):\n","    ax = axes[i]  # Get the current axes object\n","    series.value_counts().plot(kind='bar', ax=ax, title=series.name)\n","\n","    # Add number labels above each bar\n","    for p in ax.patches:\n","        ax.annotate(str(p.get_height()), (p.get_x() + p.get_width() / 2., p.get_height()),\n","                    ha='center', va='center', xytext=(0, 10), textcoords='offset points')\n","\n","\n","plt.tight_layout()  # Adjust spacing between subplots\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":905},"id":"US2t5h0OTLw9","executionInfo":{"status":"ok","timestamp":1740927718111,"user_tz":180,"elapsed":922,"user":{"displayName":"Tomaz Filgueira","userId":"15508579070858102815"}},"outputId":"dd3add08-47e6-4160-e835-6ba999179a43"},"execution_count":43,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1600x1500 with 6 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["The dataset is highly skewed towards male patients.\n","\n","There are **725 male patients and 193 female patients**. This could potentially induce a bias in our model.\n","\n","**496 patient**s had ASY (asymptotic) chest pain type.\n","\n","**552 patients** had a normal restin ECG.\n","\n","**704 patients** had blood sugar lower than 120 mg/dl"],"metadata":{"id":"So_wONL_YQT_"}},{"cell_type":"markdown","source":["## Grouby Heart Disease\n","\n","For every categorical column in the dataset, including `FastingBS`:\n","\n","Create a bar chart that displays the number of rows for each category of that column, grouped by `HeartDisease`."],"metadata":{"id":"Aq9GenpEYrIP"}},{"cell_type":"code","source":["cat_data = [hdp_data['Sex'],\n","            hdp_data['ChestPainType'],\n","            hdp_data['FastingBS'],\n","            hdp_data['RestingECG'],\n","            hdp_data['ExerciseAngina'],\n","            hdp_data['HeartDisease']]\n","\n","cat_data = ['Sex', 'ChestPainType', 'FastingBS', 'RestingECG', 'ExerciseAngina']\n","# Exclude 'HeartDisease' as it's what we group by\n","\n","fig, axes = plt.subplots(2, 3, figsize=(18, 12))\n","axes = axes.flatten()\n","\n","for i, col in enumerate(cat_data):\n","    ax = axes[i]\n","    sns.countplot(x=col, hue='HeartDisease', data=hdp_data, ax=ax)\n","    ax.set_title(f'{col}')\n","\n","    # Add number labels above each bar\n","    for p in ax.patches:\n","        ax.annotate(str(p.get_height()), (p.get_x() + p.get_width() / 2., p.get_height()),\n","                    ha='center', va='center', xytext=(0, 10), textcoords='offset points')\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"_NSWZqoGUIo9","executionInfo":{"status":"ok","timestamp":1740928435121,"user_tz":180,"elapsed":1210,"user":{"displayName":"Tomaz Filgueira","userId":"15508579070858102815"}},"outputId":"d1f355df-ac3d-49dd-bb4d-05da9ff202ba"},"execution_count":47,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1800x1200 with 6 Axes>"],"image/png":"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YHz73NfXV//973+1Z8+eq57Dxo0b1aRJEzVp0kQdO3bUypUrNWTIEL344ouSpHr16hltz58/rx9//FFdunSRJGMclxMWFqY777zTOG/SpIlat25tzLcyYmJitHv3bh05csQoW758uYKCgvTXv/7Vpm1gYKD+9re/Gefe3t6KiYnRv//9b1ksFknSypUrdeedd6pRo0Y2v9/evXurtLRU27dvr/TYAABA7XDxWc5vj9/GMSUlJTp16pRatWolX19fmzjG19dXBw4c0KFDh6p0TL/fL/nOO+/UqVOnjBjy4nLv//jHP2zajR079pL3/O08ly1bph49eujRRx+1Wdq8bdu2ysjI0MMPP6xjx45p7ty5GjBggAICAvT2229X1fQA2JnrHzcBgLqrc+fO+uijj1RcXKx9+/Zp1apVmj17tv7+978rIyNDhw4dktVq1U033VTh9W5ubjbngwYN0rJly/TZZ59p1KhR6tWrV01MAwAA1DEXvxj0yy+/VPqa4ODgcmWNGjXSzz//LEk6efKk8vPz9dZbb+mtt96q8B55eXmSpIkTJ2rTpk3685//rFatWikiIkIPPfSQunbtWunx3H777Xruuefk5OSk+vXrq02bNjZ7J//000+aNm2aVqxYYfR7UUFBwR/e/4/mWxkPPPCAxo0bp+XLl2vy5MkqKCjQmjVrNH78eJv9daRf91T8fdnNN98sSTp27JhMJpMOHTqk/fv3X3LJ09/PEwAA1H5//vOfddttt9mUnTt3TomJiVq0aJF++OEHm2XKfxvHTJ8+Xffee69uvvlmtWvXTn379tWQIUPUoUOHaxrT7+OgRo0aSZJ+/vlneXt76/vvv5ezs7NatGhh065Vq1aXvOfv5/nggw/qlltuUVxcnO6++265u7tL+jX+effdd1VaWqqDBw9qzZo1mjVrlkaNGqUWLVqod+/e1zQ3APZH4g/AdcHd3V2dO3dW586ddfPNN2v48OFauXKlysrK5OTkpHXr1snFxaXcdV5eXjbnp06d0t69eyVJBw8eVFlZmZydeXkaAADY8vb2VmBg4B/uNfxbFcUikowHUWVlZZKkhx9+WEOHDq2w7cWHUG3atFFWVpbWrFmj9evX68MPP9T8+fM1efLkcvvHXMoNN9xw2Qc/999/v3bu3KkJEyaoU6dO8vLyUllZmfr27WuM9XL+aL6V0ahRI919991G4u+DDz5QUVGRzV42V6KsrEx9+vTRU089VWH9xUQhAACo28aOHatFixZp3LhxMpvN8vHxkZOTkwYNGmQTx3Tr1k1HjhzRJ598oo0bN+r//u//NHv2bL3xxht69NFHr7r/qoiD/oizs7N69OihuXPn6tChQ2rbtm25MbRv317t27eX2WxWjx49tHz5chJ/gAMg8QfgunPx2085OTlq2bKlrFarWrRoUakHObGxscbmywkJCZozZ47i4+Ore8gAAKAOuvvuu/XWW28pLS1NZrP5mu/XpEkTNWzYUKWlpZV6INOgQQM98MADeuCBB1RcXKyBAwfq+eefV0JCgjw9Pcu9/XYlfv75Z23evFnTpk3T5MmTjfKqXgarMmJiYnTvvfdqz549Wr58uW655ZZyD7Yk6fDhw7JarTbz/s9//iNJat68uSSpZcuWOn36NA+8AABwcB988IGGDh2qV155xSg7f/688vPzy7Vt3Lixhg8fruHDh+v06dPq1q2bpk6daiT+riWmupSQkBCVlZXp6NGjNqtUHT58+Iruc+HCBUnS6dOnL9vut8/KANR9vKYCwGFt3bq1wm9KrV27VpLUunVrDRw4UC4uLpo2bVq5tlarVadOnTLOP/jgA73//vuaOXOmnn76aQ0aNEiTJk0yHhgBAAD81lNPPaUGDRro0UcfVW5ubrn6I0eOaO7cuZW+n4uLi6Kjo/Xhhx9W+CbhyZMnjZ9/G8NIv65+EBYWJqvVqpKSEkm/JgYlVfiAqzJjkcp/K33OnDlXfK9r1a9fP91www168cUXlZqaesm3/U6cOKFVq1YZ54WFhVq6dKk6deokk8kk6de3GNPS0rRhw4Zy1+fn5xsPzwAAQN3m4uJSLo6ZN2+eSktLbcp+H1N5eXmpVatWKioqMsquJaa6lMjISEnS/Pnzy42xskpKSrRx40a5u7urTZs2kqTPP//ciAV/67fPygDUfbzxB8BhjR07VmfPntXf/vY3hYaGqri4WDt37tT777+v5s2ba/jw4fL19dVzzz2nhIQEHTt2TAMGDFDDhg119OhRrVq1SqNGjdI///lP5eXlacyYMerRo4fi4uIkSa+//rq2bt2qYcOGaceOHSz5CQAAbLRs2VLJycl64IEH1KZNG8XExKhdu3ZGTLJy5UoNGzbsiu45c+ZMbd26VbfffrtGjhypsLAw/fTTT/rqq6+0adMm/fTTT5KkiIgImUwmde3aVQEBAfrmm2/0+uuvKyoqSg0bNpQkhYeHS5KeeeYZDRo0SG5uburfv7/x8OpyvL291a1bN82aNUslJSX605/+pI0bN+ro0aNX9kuqAm5ubho0aJBef/11ubi46MEHH6yw3c0336wRI0Zoz549CggI0DvvvKPc3FwtWrTIaDNhwgR9+umnuvvuuzVs2DCFh4frzJkzyszM1AcffKBjx47phhtuqKmpAQCAanL33Xfr3XfflY+Pj8LCwpSWlqZNmzbJz8/Ppl1YWJi6d++u8PBwNW7cWHv37tUHH3xgPBuS/hdTPf7444qMjJSLi4sGDRp0TeMLDw9XdHS05syZo1OnTqlLly5KTU01vnxe0VuG69at07fffivp132Jk5OTdejQIT399NPG/tMvvvii0tPTNXDgQGOJ+K+++kpLly5V48aNNW7cuGsaN4DagcQfAIf18ssva+XKlVq7dq3eeustFRcXKzg4WP/4xz80adIk+fr6SpKefvpp3XzzzZo9e7ax501QUJAiIiJ0zz33SJLGjBmjoqIiLVq0yAiu/Pz89NZbb+nee+/Vyy+/fMm9YAAAwPXrnnvu0f79+/XSSy/pk08+0YIFC+Th4aEOHTrolVde0ciRI6/ofgEBAfryyy81ffp0ffTRR5o/f778/PzUtm1bvfjii0a7xx57TMuXL9err76q06dPq1mzZnr88cc1adIko03nzp01Y8YMvfHGG1q/fr2xnFRlEn+SlJycrLFjxyopKUlWq1URERFat26dAgMDr2hOVSEmJkavv/66evXqpaZNm1bY5qabbtK8efM0YcIEZWVlqUWLFnr//feNb9RLUv369ZWamqoXXnhBK1eu1NKlS+Xt7a2bb75Z06ZNk4+PT01NCQAAVKO5c+fKxcVFy5cv1/nz59W1a1dt2rTJJi6Qfk3mffrpp9q4caOKiooUEhKi5557ThMmTDDaDBw4UGPHjtWKFSu0bNkyWa3Wa078SdLSpUtlMpn03nvvadWqVerdu7fef/99tW7dWp6enuXa/3b5dU9PT4WGhmrBggV67LHHjPJ//etfSk5OVmpqqpYvX66zZ8+qadOmGjRokJ599lm1aNHimscNwP6crFW5YygAAAAAADVs37596tSpk5YuXaohQ4aUq2/evLnatWunNWvW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vfjii9q7d69+/fVX/frrr/ruu+/04osvWjssAFa0ceNGlSpVynw8//zz1g4JQCGaP3++eS7Qrl07JScna/fu3fe8LiUlRatXrzZf++KLL2rlypVKTU0t0HiR/7p27aoGDRpo4sSJOdavWLFC1apVU+3atVWsWDF17979rkneW7duaenSpTp69Khat25dUGEjn93ttWD48OFq0qSJ6tatq0qVKql79+5asGCBMjIyLPr473//qzp16qhDhw4aOnSoWrVqVejjQOH6p68PAGzf5cuXdevWLXl6elqUe3p68hxQAECBIPGHh165cuXMW/csXLhQHTt2VNmyZa0dFgAratWqlWJjY83H7NmzrR0SgEISFxenAwcOqEePHpJub9f3wgsv5OlD288++0xVqlRR/fr1JUkNGjRQxYoV9fnnnxdozCgYb775phYvXqwff/wxW92CBQssvij24osvatWqVfrzzz8t2s2dO1elSpVSiRIlNGjQII0aNUpDhw4t8Njx793rtcDZ2VlfffWVTp06pXHjxqlUqVL63//+p6ZNm+ratWvmfgwGg15//XVlZWVp3LhxVhkLCldeXx8AAACAgkLiD9Dt7T4XLVqkxYsX66WXXrJ2OACszNnZWVWrVjUfXl5e1g4JQCGZP3++bt68KW9vb9nb28ve3l4ffPCB1qxZo+Tk5Htee+LECfN19vb2+uGHH3h2ywOqZcuWCg4O1tixYy3Kf/jhB+3fv19jxowx/zs3b95c165d04oVKyza9urVS7GxsYqPj1daWpreffdd2dnxn2APgry+FlSpUkUDBw7UJ598osOHD+uHH37Iluy3t7e3+F/Yrn/y+gDg4VG2bFkVK1ZMiYmJFuWJiYnmZ0cDAJCf+K9OQLe37rlx44YyMzMVHBxs7XAAAIAV3Lx5U0uWLNE777xjser3yJEj8vb21meffZbrtceOHdOhQ4e0a9cui2t37dqlqKgo/fTTT4U4EuSXN954Qxs2bLB4/s78+fPVsmVLHTlyxOLfOiwsLNvKUFdXV1WtWlUVKlQg4fcAud/XgkqVKqlkyZJKS0sr5IhRVPyT1wcADw8HBwc1atRI27dvN5dlZWVp+/btCggIsGJkAABbxVcOAUnFihUzb+NUrFgxK0cDAACsYePGjfrjjz80YMAAubq6WtSFhIRo/vz5GjJkSI7Xzp8/X02bNlXLli2z1TVp0kTz58/X22+/XSBxo+DUrVtXvXr1Mm/5nJmZqU8//VTh4eGqU6eORduBAwfq3Xff1YkTJ1S7dm1rhIt8kpfXgoSEBF27dk0dOnRQxYoVlZSUpNmzZyszM1NPPfWUlSKHNfH6AOBuwsLC1LdvXzVu3FhNmzbVrFmzlJaWpv79+1s7NACFLDU1VadOnTKfx8fHKzY2Vu7u7vL19bViZLAlfO0U+P+5uLjIxcXF2mEAAAArmT9/voKCgrJ90C/d/rD/0KFDOnr0aLa6GzduaOnSpQoJCcmx35CQEC1ZskSZmZn5HjMKXnh4uLKysiRJ69ev15UrV9S1a9ds7WrWrKmaNWuyqscG5OW1oEyZMvrll1/Up08f+fv7q3379kpISNDWrVtVo0YNK0QNa+P1AcDdvPDCC5oxY4YmTJigBg0aKDY2Vps3b5anp6e1QwNQyA4dOqSGDRuqYcOGkm5/MaBhw4aaMGGClSODLTGYTCaTtYMAAAAAAAAAAAAA8O+w4g8AAAAAAAAAAACwAST+AAAAAAAAAAAAABtA4g8AAAAAAAAAAACwAST+AAAAAAAAAAAAABtA4g8AAAAAAAAAAACwAST+AAAAAAAAAAAAABtA4g8AAAAAAAAAAACwAST+AAAAAAAAAAAAABtA4g/AQ+H333/X0KFD5evrK0dHRxmNRgUHB+u7776zdmgAAAD3ZDAYtG7dOmuH8Y8FBgZq5MiR1g4DAADAKpgLAbAGEn8AHgohISH6/vvvtXjxYv38889av369AgMDdeXKFWuHBgAAoISEBA0fPlyVK1eWo6OjfHx81KlTJ23fvr1Q7t+vXz916dIlW7nBYDAfrq6uevzxx7Vjx4489/vFF19oypQpeWq7aNEii/vldJw5cybP9wYAAMhJv379cpxnnDp16r773LVrlwwGg5KSkizK/8lcKK/OnDljEbeDg4OqVq2qqVOnymQymdvFx8erZ8+e8vb2lpOTkx555BF17txZP/30U77GA6DoIfEHwOYlJSXp22+/1ZtvvqlWrVqpYsWKatq0qcaOHatnnnnG3GbgwIEqV66cXFxc1Lp1ax05ckTS7dWCRqNR06dPN/e5b98+OTg4FNqHcQAAwHadOXNGjRo10o4dO/T222/r2LFj2rx5s1q1aqXQ0FBrh6eFCxfq4sWL+u6771S2bFk9/fTT+uWXX/J0rbu7u0qXLp2nti+88IIuXrxoPgICAjRo0CCLMh8fn38zFAAAAElSu3btLOYYFy9elJ+fX77f55/Mhf6pb775RhcvXtTJkyc1efJkTZs2TQsWLJAkZWZm6qmnnlJycrK++OILxcXF6fPPP1fdunWzJScB2B4SfwBsXqlSpVSqVCmtW7dOGRkZObZ5/vnndenSJW3atEkxMTF69NFH1aZNG129elXlypXTggULNGnSJB06dEh//vmnevfurWHDhqlNmzaFPBoAAGBr/vOf/8hgMOjAgQMKCQlR9erVVbt2bYWFhWn//v3mdpcvX1bXrl1VsmRJVatWTevXr7fo5/jx42rfvr1KlSolT09P9e7dW5cvXzbXr169WnXr1lWJEiXk4eGhoKAgpaWladKkSVq8eLG+/PJL8zfHd+3aZb7Ozc1NRqNRderU0QcffKDr169r27ZtunLlinr06KEKFSqoZMmSqlu3rj777DOLmP6+vVWlSpU0ffp0vfTSSypdurR8fX310UcfSZJKlCgho9FoPhwcHFSyZEkZjUZt3bpVtWvX1s2bNy3679Kli3r37i1JmjRpkho0aKAPP/xQPj4+KlmypLp166bk5GSLaz755BPVrFlTTk5O8vf319y5c//5PxoAAHig3XkMzF+P9957T3Xr1pWzs7N8fHz0n//8R6mpqeZrfv31V3Xq1EllypSRs7Ozateura+//lpnzpxRq1atJEllypSRwWBQv379JP2zudAd+/btU4MGDeTk5KTGjRtr3bp1MhgMio2NtWjn4eEho9GoihUrqlevXnr88cd1+PBhSdKJEyd0+vRpzZ07V82bN1fFihX1+OOPa+rUqWrevHn+/0IBFCkk/gDYPHt7ey1atEiLFy+Wm5ubHn/8cf3f//2fjh49Kknau3evDhw4oFWrVqlx48aqVq2aZsyYITc3N61evVqS1KFDBw0aNEi9evXSkCFD5OzsrIiICGsOCwAA2ICrV69q8+bNCg0NlbOzc7Z6Nzc388+TJ09Wt27ddPToUXXo0EG9evXS1atXJd3evaB169Zq2LChDh06pM2bNysxMVHdunWTJF28eFE9evTQSy+9pB9//FG7du3Ss88+K5PJpFdeeUXdunWz+Ob7Y489lmO8JUqUkCTduHFD6enpatSokb766isdP35cgwcPVu/evXXgwIG7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MJj+ydPkAQAAAACwojZt2qh27drZvrA1adIkrVu3TrGxsdYJDAAAoAAsW7ZM/fv3V3JyskqUKGHtcAA8AFjxBwAAAAAo8v744w/t2rVLu3btsljFBwAAYEuWLFmiypUrq0KFCjpy5IheffVVdevWjaQfgDwj8QcAAAAAKPIaNmyoP/74Q2+++aZq1Khh7XAAAAAKREJCgiZMmKCEhAR5eXnp+eefN2/hCQB5wVafAAAAAAAAAAAAgA2ws3YAAAAAAAAAAAAAAP49En8AAAAAAAAAAACADSDxBwAAAAAAAAAAANgAEn8AAAAAAAAAAACADSDxBwAAAAAAAAAAANgAEn8AAAAAAAAAAACADSDxBwAAAAAAAAAAANgAEn8AAAAAAAAAAACADSDxBwAAAAAAAAAAANgAEn8AAAAAAAAAAACADSDxBwAAAAAAAAAAANgAEn8AAAAAAAAAAACADSDxBwAAAAAAAAAAANgAEn8AHgoGg0GTJk2ydhgAAABFTmBgoAIDA60dRoGx9fEBAAAAwF+R+ANQIBYtWiSDwWA+7O3tVaFCBfXr10/nz58vkHt+/fXXVk3u/X3Mfz/2799v0T49PV0zZ85Us2bN5OrqKicnJ1WvXl3Dhg3Tzz//nK3/o0ePqn///vLz85OTk5NKlSqlBg0aaMyYMfrll18Ka5gAAOAu/ul84GHy448/ymAwyMnJSUlJSdYOBwAAAABskr21AwBg28LDw+Xn56f09HTt379fixYt0t69e3X8+HE5OTnl672+/vprRUZG5pj8u379uuztC+cl786Y/65q1armny9fvqx27dopJiZGTz/9tHr27KlSpUopLi5OK1as0EcffaQbN26Y23/88ccaOnSoypYtq169esnf3183b97U8ePHtWTJEs2aNUvXr19XsWLFCmWMAADg7vIyHygqtm7dWij3Wbp0qYxGo/744w+tXr1aAwcOLJT7Ftb4AAAAAKAoIPEHoEC1b99ejRs3liQNHDhQZcuW1Ztvvqn169erW7duhRZHficZ7+avY85Nv3799P3332v16tUKCQmxqJsyZYpef/118/m+ffs0dOhQPf7449q4caNKly5t0f6dd97RtGnT8m8AAADgX8vLfKAgpaWlydnZOU9tHRwcCjgayWQyafny5erZs6fi4+O1bNmyQkv8Fcb4AAAAAKCoYKtPAIXq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165dU1xcnPn5b5K0bNky+fv7q02bNurQoYNatGhhMX+BbeJ9AQAAAADwb7DiD0WayWS6Z5tq1appzZo1udY/+uij2r9//137qFSpUrZ7OTk5KTIy8q7PCgSAB5XJZNKtW7fu2iY8PFyDBg3SjRs3dObMGS1dulRBQUGaMmWKXn/9dUm3n3vG88Zg6+bPn59rnY+Pj3bv3n3X69u1a6d27drdtU1gYGC2uYi7u7uWL1+e90CBf4H3BQAAAACwDaz4AwDgAbB371498cQTKlGihHx8fDRixAilpaWZ6z/99FM1btxYpUuXltFoVM+ePXXp0iVz/Z2VIps2bVKjRo3k6OiopUuXavLkyTpy5Ih5FceiRYvM19zpy9fXVy1bttRHH32k8ePHa8KECYqLi7Po984KlF9//VWdOnVSmTJl5OzsrNq1a+vrr78293n8+HG1b99epUqVkqenp3r37q3Lly+b6zdv3qwWLVrIzc1NHh4eevrpp3X69Glz/Y0bNzRs2DB5eXnJyclJFStWVEREhLk+KSlJAwcOVLly5eTi4qLWrVvryJEj+fbvAABFBe8Lt/G+AAAAAACWSPwBAFDEnT59Wu3atVNISIiOHj2qzz//XHv37tWwYcPMbTIzMzVlyhQdOXJE69at05kzZ9SvX79sfb322mt644039OOPP+qpp57S//73P9WuXVsXL17UxYsX9cILL9w1lv/+978ymUz68ssvc6wPDQ1VRkaG9uzZo2PHjunNN99UqVKlJN3+8LV169Zq2LChDh06pM2bNysxMVHdunUzX5+WlqawsDAdOnRI27dvl52dnbp27aqsrCxJ0uzZs7V+/XqtXLlScXFxWrZsmSpVqmS+/vnnn9elS5e0adMmxcTE6NFHH1WbNm109erVvP66AaDI432B9wUAAAAAyA1bfQIAYGUbN240fwh6x1+3W4uIiFCvXr00cuRISbe3OJ49e7aefPJJffDBB3JyctJLL71kbl+5cmXNnj1bTZo0UWpqqkXf4eHheuqpp8znpUqVkr29fZ63ZXN3d1f58uV15syZHOvPnj2rkJAQ1a1b1xzLHe+//74aNmyo6dOnm8sWLFggHx8f/fzzz6pevbpCQkIs+luwYIHKlSunH374QXXq1NHZs2dVrVo1tWjRQgaDQRUrVjS33bt3rw4cOKBLly7J0dFRkjRjxgyt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y5YlSTp16pTkH7/lP2/evHTu3DkHHXRQysvL86lPfSoPP/zwBue444478sYbb+TUU0/d4Jj58+dnzZo1qa6uLrT17Nkz3bp18x9tABrc66+/nrVr16a8vLxee3l5eWpqapqoKgCaip8LAAAADUfw10ytW7cuZ599dg4++ODss88+SZIXX3wxSXLhhRfmtNNOy6xZs/Jv//ZvOeKII/Lcc8+td57rrrsugwYNyi677LLB16qpqUnr1q3TsWPHeu3+ow0AAAAAALDlcKvPZmrEiBF56qmn6l3Nt27duiTJV7/61cIVfPvtt19mz56d66+/PhMnTqw3x5///Ofcc889+elPf9p4hQPA+9hxxx3TokWL1NbW1muvra2td7tqALYOfi4AAAA0HFf8NUMjR47MXXfdlQceeKDelXpdunRJkvTq1ave+L322iuLFy9+zzw33HBDdthhh3z2s5/d6OtVVFRk9erVWbp0ab12/9EGYHNo3bp1+vXrl9mzZxfa1q1bl9mzZ6eqqqoJKwOgKfi5AAAA0HAEf81IXV1dRo4cmRkzZuT+++9Pjx496vXvuuuuqayszMKFC+u1//GPf0z37t3fM9cNN9yQk08+Oa1atdro6/br1y+tWrWq9x/thQsXZvHixf6jDcBmMWrUqFx77bW58cYb8+yzz+bMM8/MihUrNvpMWgCKl58LAAAADcOtPpuRESNGZPr06fnFL36R7bbbrvB8vQ4dOqRt27YpKSnJueeem3HjxqVPnz7p27dvbrzxxvzhD3/I7bffXm+u+++/P4sWLcpXvvKV97zOX/7ylxxxxBG56aab8olPfCIdOnTI8OHDM2rUqHTq1Cnt27fPWWedlaqqqhx44IGNcu4ANJz5l5/c1CW8r+OOOy6vvfZaxo4dm5qamvTt2zezZs1KeXl5U5cGUHT8XAAAANh6CP6akSlTpiRJBgwYUK/9hhtuyCmnnJIkOfvss7Ny5cqcc845efPNN9OnT5/ce++92X333esdc9111+Wggw5Kz5493/M6a9asycKFC/P2228X2n7wgx+ktLQ0Q4cOzapVqzJo0KBcc801DXuCAPBPRo4cmZEjRzZ1GQA0E34uAAAAfHSCv2akrq7uA4371re+lW9961sbHTN9+vQN9u26667vea02bdpk8uTJmTx58geqAQAAAAAAgObFM/4AAAAAAACgCAj+AAAAAAAAoAgI/gAAAAAAAKAICP4AAAAAAACgCAj+AAAAAAAAoAgI/gAAAAAAAKAICP4AAAAAAACgCAj+AAAAAAAAoAi0bOoCikm/c29q6hKanRnbNXUFAAAAAAAAWwfBHwAUmcXjezfq63Ub++SHPuahhx7K5Zdfnvnz52fJkiWZMWNGhgwZ0vDFAeDnAgAAwFbErT4BgEa3YsWK9OnTJ5MnT27qUgBoBvxcAAAAaBiu+AMAGt3gwYMzePDgpi4DgGbCzwUAAICG4Yo/AAAAoChMmTIl++67b9q3b5/27dunqqoq//u//1vo//GPf5wBAwakffv2KSkpydKlS9c7zy9/+cv0798/bdu2zfbbb/++t56tq6vL2LFj06VLl7Rt2zbV1dV57rnnGvDMAADggxH8AQAAAEVhl112yfe+973Mnz8/jz/+eA4//PAcc8wxefrpp5Mkb7/9do488sh8+9vf3uAcP/vZz3LSSSfl1FNPze9+97v8+te/zhe/+MWNvu5ll12Wq666KlOnTs28efOy7bbbZtCgQVm5cmWDnh8AALwft/oEAAAAisLRRx9db/+73/1upkyZkkcffTR77713zj777CTJnDlz1nv8O++8k69//eu5/PLLM3z48EJ7r169NviadXV1mTRpUi644IIcc8wxSZKbbrop5eXlmTlzZo4//viPdlIAAPAhuOIPAAAAKDpr167NLbfckhUrVqSqquoDHfPEE0/kL3/5S0pLS7PffvulS5cuGTx4cJ566qkNHrNo0aLU1NSkurq60NahQ4f0798/c+fO/cjnAQAAH4bgDwAAACgaTz75ZNq1a5eysrKcccYZmTFjxkav2PtnL774YpLkwgsvzAUXXJC77ror22+/fQYMGJA333xzvcfU1NQkScrLy+u1l5eXF/oAAKCxuNUnANDo3nrrrTz//POF/UWLFmXBggXp1KlTunXr1oSVAdAU/FygIe25555ZsGBBli1blttvvz3Dhg3Lgw8++IHCv3Xr1iVJvvOd72To0KFJkhtuuCG77LJLbrvttnz1q1/drLUDAMBHJfgDgCLTbeyTTV3C+3r88cdz2GGHFfZHjRqVJBk2bFimTZvWRFUBFCc/F9jatG7dOh/72MeSJP369ctvfvOb/PCHP8x//dd/ve+xXbp0SVL/mX5lZWXZbbfdsnjx4vUeU1FRkSSpra0tHP/uft++fTf1NAAAYJMI/gCARjdgwIDU1dU1dRkANBN+LrA5rVu3LqtWrfpAY/v165eysrIsXLgwhxxySJJkzZo1eemll9K9e/f1HtOjR49UVFRk9uzZhaBv+fLlmTdvXs4888wGOQcAAPigBH8AAABAURg9enQGDx6cbt265W9/+1umT5+eOXPm5J577knyj+fx1dTUFG4t++STT2a77bZLt27d0qlTp7Rv3z5nnHFGxo0bl65du6Z79+65/PLLkySf//znC6/Ts2fPTJw4Mccee2xKSkpy9tln5+KLL84ee+yRHj16ZMyYMamsrMyQIUMa/e8AAICtm+APAAAAKAqvvvpqTj755CxZsiQdOnTIvvvum3vuuSef/vSnkyRTp07NRRddVBh/6KGHJvnHc/xOOeWUJMnll1+eli1b5qSTTsrf//739O/fP/fff3+23377wnELFy7MsmXLCvvnnXdeVqxYkdNPPz1Lly7NIYccklmzZqVNmzaNcNYAAPD/CP4AAACAonDddddttP/CCy/MhRdeuNExrVq1yhVXXJErrrhig2P+9da0JSUlGT9+fMaPH/+BawUAgM2htKkLAAAAAAAAAD46wR8ANIJ//a1wmgfvC9BUfP9pvrw3AADAlkzwBwCbUatWrZIkb7/9dhNXwvqsXr06SdKiRYsmrgTYWvi50Py9+968+14BAABsSTzjDwA2oxYtWqRjx4559dVXkyTbbLNNSkpKmrgqkmTdunV57bXXss0226RlS0sioHH4udB81dXV5e23386rr76ajh07+qUQAABgi+RTLgDYzCoqKpKk8CEvzUdpaWm6devmQ3egUfm50Lx17Nix8B4BAABsaQR/ALCZlZSUpEuXLuncuXPWrFnT1OXwT1q3bp3SUnc+BxqXnwvNV6tWrVzpBwAAbNEEfwDQSFq0aOHDRAAK/FwAAACgofkVdwAAAAAAACgCrvgDAAAAPpLF43s3dQm8j25jn2zqEgAAaASu+AMAAAAAAIAiIPgDAAAAAACAItCkwd/EiRNzwAEHZLvttkvnzp0zZMiQLFy4sN6YAQMGpKSkpN52xhln1BuzePHiHHXUUdlmm23SuXPnnHvuuXnnnXca81QAAAAAAACgSTXpM/4efPDBjBgxIgcccEDeeeedfPvb387AgQPzzDPPZNttty2MO+200zJ+/PjC/jbbbFP489q1a3PUUUeloqIijzzySJYsWZKTTz45rVq1yiWXXNKo5wMAAAAAAABNpUmDv1mzZtXbnzZtWjp37pz58+fn0EMPLbRvs802qaioWO8cv/rVr/LMM8/kvvvuS3l5efr27ZsJEybk/PPPz4UXXpjWrVu/55hVq1Zl1apVhf3ly5c30BkBAAAAAABA02hWz/hbtmxZkqRTp0712m+++ebsuOOO2WeffTJ69Oi8/fbbhb65c+emd+/eKS8vL7QNGjQoy5cvz9NPP73e15k4cWI6dOhQ2Lp27boZzgYAAAAAAAAaT5Ne8ffP1q1bl7PPPjsHH3xw9tlnn0L7F7/4xXTv3j2VlZX5/e9/n/PPPz8LFy7Mz3/+8yRJTU1NvdAvSWG/pqZmva81evTojBo1qrC/fPly4R8AAAAAAABbtGYT/I0YMSJPPfVUHn744Xrtp59+euHPvXv3TpcuXXLEEUfkhRdeyO67775Jr1VWVpaysrKPVC8AAAAAAAA0J83iVp8jR47MXXfdlQceeCC77LLLRsf2798/SfL8888nSSoqKlJbW1tvzLv7G3ouIAAAAAAAABSbJg3+6urqMnLkyMyYMSP3339/evTo8b7HLFiwIEnSpUuXJElVVVWefPLJvPrqq4Ux9957b9q3b59evXptlroBAAAAAACguWnSW32OGDEi06dPzy9+8Ytst912hWfydejQIW3bts0LL7yQ6dOn5zOf+Ux22GGH/P73v88555yTQw89NPvuu2+SZODAgenVq1dOOumkXHbZZampqckFF1yQESNGuJ0nAAAAAAAAW40mveJvypQpWbZsWQYMGJAuXboUtltvvTVJ0rp169x3330ZOHBgevbsmW984xsZOnRo7rzzzsIcLVq0yF133ZUWLVqkqqoqX/rSl3LyySdn/PjxTXVaAAAAAAAA0Oia9Iq/urq6jfZ37do1Dz744PvO071799x9990NVRYAAAAAAABscZr0ij8AAAAAAACgYQj+AAAAAAAAoAgI/gAAAAAAAKAICP4AAAAAAACgCAj+AAC2EFOmTMm+++6b9u3bp3379qmqqsr//u//FvpXrlyZESNGZIcddki7du0ydOjQ1NbW1ptj8eLFOeqoo7LNNtukc+fOOffcc/POO+809qkAAAAAsBkI/gAAthC77LJLvve972X+/Pl5/PHHc/jhh+eYY47J008/nSQ555xzcuedd+a2227Lgw8+mFdeeSWf+9znCsevXbs2Rx11VFavXp1HHnkkN954Y6ZNm5axY8c21SkBAAAA0IBaNnUBAAB8MEcffXS9/e9+97uZMmVKHn300eyyyy657rrrMn369Bx++OFJkhtuuCF77bVXHn300Rx44IH51a9+lWeeeSb33XdfysvL07dv30yYMCHnn39+LrzwwrRu3bopTgsAAACABuKKPwCALdDatWtzyy23ZMWKFamqqsr8+fOzZs2aVFdXF8b07Nkz3bp1y9y5c5Mkc+fOTe/evVNeXl4YM2jQoCxfvrxw1eD6rFq1KsuXL6+3AQBsqSZPnpxdd901bdq0Sf/+/fPYY49tdPykSZOy5557pm3btunatWvOOeecrFy5spGqBQD4cAR/AABbkCeffDLt2rVLWVlZzjjjjMyYMSO9evVKTU1NWrdunY4dO9YbX15enpqamiRJTU1NvdDv3f53+zZk4sSJ6dChQ2Hr2rVrw54UAEAjufXWWzNq1KiMGzcuTzzxRPr06ZNBgwbl1VdfXe/46dOn51vf+lbGjRuXZ599Ntddd11uvfXWfPvb327kygEAPhjBHwDAFmTPPffMggULMm/evJx55pkZNmxYnnnmmc36mqNHj86yZcsK28svv7xZXw8AYHO58sorc9ppp+XUU09Nr169MnXq1GyzzTa5/vrr1zv+kUceycEHH5wvfvGL2XXXXTNw4MCccMIJG71K0N0SAICmJPgDANiCtG7dOh/72MfSr1+/TJw4MX369MkPf/jDVFRUZPXq1Vm6dGm98bW1tamoqEiSVFRUpLa29j397/ZtSFlZWdq3b19vAwDY0qxevTrz58+vd2v00tLSVFdXF26N/q8OOuigzJ8/vxD0vfjii7n77rvzmc98ZoOv424JAEBTEvwBAGzB1q1bl1WrVqVfv35p1apVZs+eXehbuHBhFi9enKqqqiRJVVVVnnzyyXq3srr33nvTvn379OrVq9FrBwBoTK+//nrWrl273lufb+i251/84hczfvz4HHLIIWnVqlV23333DBgwYKO3+nS3BACgKbVs6gIAAPhgRo8encGDB6dbt27529/+lunTp2fOnDm555570qFDhwwfPjyjRo1Kp06d0r59+5x11lmpqqrKgQcemCQZOHBgevXqlZNOOimXXXZZampqcsEFF2TEiBEpKytr4rMDAGh+5syZk0suuSTXXHNN+vfvn+effz5f//rXM2HChIwZM2a9x5SVlVlbAQBNRvAHALCFePXVV3PyySdnyZIl6dChQ/bdd9/cc889+fSnP50k+cEPfpDS0tIMHTo0q1atyqBBg3LNNdcUjm/RokXuuuuunHnmmamqqsq2226bYcOGZfz48U11SgAAjWbHHXdMixYt1nvr8w3d9nzMmDE56aST8pWvfCVJ0rt376xYsSKnn356vvOd76S01M20AIDmRfAHALCFuO666zba36ZNm0yePDmTJ0/e4Jju3bvn7rvvbujSAACavdatW6dfv36ZPXt2hgwZkuQft02fPXt2Ro4cud5j3n777feEey1atEiS1NXVbdZ6AQA2heAPAAAAgK3CqFGjMmzYsOy///75xCc+kUmTJmXFihU59dRTkyQnn3xydt5550ycODFJcvTRR+fKK6/MfvvtV7jV55gxY3L00UcXAkAAgOZE8AcAAADAVuG4447La6+9lrFjx6ampiZ9+/bNrFmzUl5eniRZvHhxvSv8LrjggpSUlOSCCy7IX/7yl+y00045+uij893vfrepTgEAYKMEfwAAAABsNUaOHLnBW3vOmTOn3n7Lli0zbty4jBs3rhEqAwD46DyBGAAAAAAAAIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAGbA4goAAGUSSURBVIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAIqA4A8AAAAAAACKgOAPAAAAAAAAioDgDwAAAAAAAIqA4A8AYAsxceLEHHDAAdluu+3SuXPnDBkyJAsXLqw3ZsCAASkpKam3nXHGGfXGLF68OEcddVS22WabdO7cOeeee27eeeedxjwVAAAAADaDJg3+PsiHVytXrsyIESOyww47pF27dhk6dGhqa2vrjfHhFQCwNXjwwQczYsSIPProo7n33nuzZs2aDBw4MCtWrKg37rTTTsuSJUsK22WXXVboW7t2bY466qisXr06jzzySG688cZMmzYtY8eObezTAQAAAKCBtWzKF3/3w6sDDjgg77zzTr797W9n4MCBeeaZZ7LtttsmSc4555z88pe/zG233ZYOHTpk5MiR+dznPpdf//rXSf7fh1cVFRV55JFHsmTJkpx88slp1apVLrnkkqY8PQCABjVr1qx6+9OmTUvnzp0zf/78HHrooYX2bbbZJhUVFeud41e/+lWeeeaZ3HfffSkvL0/fvn0zYcKEnH/++bnwwgvTunXr9xyzatWqrFq1qrC/fPnyBjojAAAAABpSk17xN2vWrJxyyinZe++906dPn0ybNi2LFy/O/PnzkyTLli3LddddlyuvvDKHH354+vXrlxtuuCGPPPJIHn300ST/78Or//mf/0nfvn0zePDgTJgwIZMnT87q1aub8vQAADarZcuWJUk6depUr/3mm2/OjjvumH322SejR4/O22+/XeibO3duevfunfLy8kLboEGDsnz58jz99NPrfZ2JEyemQ4cOha1r166b4WwAAAAA+Kia1TP+/vXDq/nz52fNmjWprq4ujOnZs2e6deuWuXPnJtm0D69WrVqV5cuX19sAALYk69aty9lnn52DDz44++yzT6H9i1/8Yv7nf/4nDzzwQEaPHp3//u//zpe+9KVCf01NTb11U5LCfk1NzXpfa/To0Vm2bFlhe/nllzfDGQEAAADwUTXprT7/2fo+vKqpqUnr1q3TsWPHemPLy8sLH0xtyodXEydOzEUXXdTAZwAA0HhGjBiRp556Kg8//HC99tNPP73w5969e6dLly454ogj8sILL2T33XffpNcqKytLWVnZR6oXAAAAgM2v2Vzx9+6HV7fccstmfy2/tQ4AbMlGjhyZu+66Kw888EB22WWXjY7t379/kuT5559PklRUVKS2trbemHf3N/RcQAAAAAC2DM0i+NvQh1cVFRVZvXp1li5dWm98bW1t4YOpTfnwqqysLO3bt6+3AQA0d3V1dRk5cmRmzJiR+++/Pz169HjfYxYsWJAk6dKlS5KkqqoqTz75ZF599dXCmHvvvTft27dPr169NkvdAAAAADSOJg3+3u/Dq379+qVVq1aZPXt2oW3hwoVZvHhxqqqqkvjwCgDYeowYMSL/8z//k+nTp2e77bZLTU1Nampq8ve//z1J8sILL2TChAmZP39+Xnrppdxxxx05+eSTc+ihh2bfffdNkgwcODC9evXKSSedlN/97ne55557csEFF2TEiBFu5wkAAACwhWvSZ/yNGDEi06dPzy9+8YvCh1dJ0qFDh7Rt2zYdOnTI8OHDM2rUqHTq1Cnt27fPWWedlaqqqhx44IFJ6n94ddlll6WmpsaHVwBAUZoyZUqSZMCAAfXab7jhhpxyyilp3bp17rvvvkyaNCkrVqxI165dM3To0FxwwQWFsS1atMhdd92VM888M1VVVdl2220zbNiwjB8/vjFPBQAAAIDNoEmDv/f78CpJfvCDH6S0tDRDhw7NqlWrMmjQoFxzzTWFsT68AgC2FnV1dRvt79q1ax588MH3nad79+65++67G6osAAAAAJqJJg3+3u/DqyRp06ZNJk+enMmTJ29wjA+vAAAAAAAA2No16TP+AAAAAAAAgIYh+AMAAAAAAIAiIPgDAAAAAACAIiD4AwAAAAAAgCIg+AMAAAAAAIAiIPgDAAAAAACAIiD4AwAAAAAAgCIg+AMAAAAAAIAiIPgDAAAAAACAIiD4AwAAAAAAgCIg+AMAAAAAAIAiIPgDAAAAAACAIiD4AwAAAAAAgCIg+AMAAAAAAIAiIPgDAAAAAACAIiD4AwAAAAAAgCIg+AMAAAAAAIAiIPgDAAAAAACAIiD4AwAAAAAAgCIg+AMAAAAAAIAiIPgDAAAAAACAIiD4AwAAAAAAgCIg+AMAAAAAAIAiIPgDAAAAAACAIiD4AwAAAGCrMXny5Oy6665p06ZN+vfvn8cee2yj45cuXZoRI0akS5cuKSsry8c//vHcfffdjVQtAMCH07KpCwAAAACAxnDrrbdm1KhRmTp1avr3759JkyZl0KBBWbhwYTp37vye8atXr86nP/3pdO7cObfffnt23nnn/OlPf0rHjh0bv3gAgA9A8AcAAADAVuHKK6/MaaedllNPPTVJMnXq1Pzyl7/M9ddfn29961vvGX/99dfnzTffzCOPPJJWrVolSXbdddfGLBkA4ENxq08AAAAAit7q1aszf/78VFdXF9pKS0tTXV2duXPnrveYO+64I1VVVRkxYkTKy8uzzz775JJLLsnatWs3+DqrVq3K8uXL620AAI1F8AcAAABA0Xv99dezdu3alJeX12svLy9PTU3Neo958cUXc/vtt2ft2rW5++67M2bMmHz/+9/PxRdfvMHXmThxYjp06FDYunbt2qDnAQCwMYI/AAAAAFiPdevWpXPnzvnxj3+cfv365bjjjst3vvOdTJ06dYPHjB49OsuWLStsL7/8ciNWDABs7TzjDwAAAICit+OOO6ZFixapra2t115bW5uKior1HtOlS5e0atUqLVq0KLTttddeqampyerVq9O6dev3HFNWVpaysrKGLR4A4ANyxR8AAAAARa9169bp169fZs+eXWhbt25dZs+enaqqqvUec/DBB+f555/PunXrCm1//OMf06VLl/WGfgAATU3wBwAAAMBWYdSoUbn22mtz44035tlnn82ZZ56ZFStW5NRTT02SnHzyyRk9enRh/Jlnnpk333wzX//61/PHP/4xv/zlL3PJJZdkxIgRTXUKAAAb5VafAAAAAGwVjjvuuLz22msZO3Zsampq0rdv38yaNSvl5eVJksWLF6e09P/9nnzXrl1zzz335Jxzzsm+++6bnXfeOV//+tdz/vnnN9UpAABslOAPAAAAgK3GyJEjM3LkyPX2zZkz5z1tVVVVefTRRzdzVQAADcOtPgEAAAAAAKAICP4AAAAAAACgCAj+AAAAAAAAoAgI/gAAAAAAAKAICP4AAAAAAACgCAj+AAAAAAAAoAgI/gAAAAAAAKAICP4AAAAAAACgCAj+AAAAAAAAoAgI/gAAAAAAAKAICP4AAAAAAACgCAj+AAAAAAAAoAgI/gAAAAAAAKAICP4AAAAAAACgCAj+AAAAAAAAoAgI/gAAAAAAAKAICP4AAAAAAACgCAj+AACALdpDDz2Uo48+OpWVlSkpKcnMmTPr9dfW1uaUU05JZWVlttlmmxx55JF57rnnCv1vvvlmzjrrrOy5555p27ZtunXrlq997WtZtmzZRl+3rq4uY8eOTZcuXdK2bdtUV1fXmxcAAAAam+APAADYoq1YsSJ9+vTJ5MmT39NXV1eXIUOG5MUXX8wvfvGL/Pa3v0337t1TXV2dFStWJEleeeWVvPLKK7niiivy1FNPZdq0aZk1a1aGDx++0de97LLLctVVV2Xq1KmZN29ett122wwaNCgrV67cLOcJAAAA76dlUxcAAADwUQwePDiDBw9eb99zzz2XRx99NE899VT23nvvJMmUKVNSUVGRn/zkJ/nKV76SffbZJz/72c8Kx+y+++757ne/my996Ut555130rLle//bVFdXl0mTJuWCCy7IMccckyS56aabUl5enpkzZ+b444/fDGcKAAAAG+eKPwAAoGitWrUqSdKmTZtCW2lpacrKyvLwww9v8Lhly5alffv26w39kmTRokWpqalJdXV1oa1Dhw7p379/5s6d20DVAwAAwIcj+AMAAIpWz549061bt4wePTp//etfs3r16lx66aX585//nCVLlqz3mNdffz0TJkzI6aefvsF5a2pqkiTl5eX12svLywt9AAAA0NgEfwAAW4iJEyfmgAMOyHbbbZfOnTtnyJAhWbhwYb0xK1euzIgRI7LDDjukXbt2GTp0aGpra+uNWbx4cY466qhss8026dy5c84999y88847jXkq0GhatWqVn//85/njH/+YTp06ZZtttskDDzyQwYMHp7T0vf8dWr58eY466qj06tUrF154YeMXDAAAAB+B4A8AYAvx4IMPZsSIEXn00Udz7733Zs2aNRk4cGBWrFhRGHPOOefkzjvvzG233ZYHH3wwr7zySj73uc8V+teuXZujjjoqq1evziOPPJIbb7wx06ZNy9ixY5vilKBR9OvXLwsWLMjSpUuzZMmSzJo1K2+88UZ22223euP+9re/5cgjj8x2222XGTNmpFWrVhucs6KiIkneE6zX1tYW+gAAAKCxrf+BFQAANDuzZs2qtz9t2rR07tw58+fPz6GHHpply5bluuuuy/Tp03P44YcnSW644YbstddeefTRR3PggQfmV7/6VZ555pncd999KS8vT9++fTNhwoScf/75ufDCC9O6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zQbnHT16dEaNGlXYX758ebp27dpgdQMA/LPGWjsBAAAAsHXbpOBvfUpLSzNq1KgMGDAg5513XoPMefzxxxf+3Lt37+y7777ZfffdM2fOnBxxxBGbPG9ZWVnKysoaokQAgE2yOdZOAAAAAGzdShtyshdeeCHvvPNOQ05Zz2677ZYdd9wxzz//fJKkoqIir776ar0x77zzTt58880NPhcQAKC52NxrJwAAAAC2Lpt0xd8/3yYzSerq6rJkyZL88pe/zLBhwxqksPX585//nDfeeCNdunRJklRVVWXp0qWZP39++vXrlyS5//77s27duvTv33+z1QEA8GE01doJAAAAgK3LJgV/v/3tb+vtl5aWZqeddsr3v//9fPnLX/7A87z11luFq/eSZNGiRVmwYEE6deqUTp065aKLLsrQoUNTUVGRF154Ieedd14+9rGPZdCgQUmSvfbaK0ceeWROO+20TJ06NWvWrMnIkSNz/PHHp7KyclNODQCgwTXU2gkAAAAANmaTgr8HHnigQV788ccfz2GHHVbYf/e34YcNG5YpU6bk97//fW688cYsXbo0lZWVGThwYCZMmFDv+Xw333xzRo4cmSOOOCKlpaUZOnRorrrqqgapDwCgITTU2gkAAAAANmaTgr93vfbaa1m4cGGSZM8998xOO+30oY4fMGBA6urqNth/zz33vO8cnTp1yvTp0z/U6wIANIWPunYCAAAAgI0p3ZSDVqxYkS9/+cvp0qVLDj300Bx66KGprKzM8OHD8/bbbzd0jQAAWzRrJwAAAAAawyYFf6NGjcqDDz6YO++8M0uXLs3SpUvzi1/8Ig8++GC+8Y1vNHSNAABbNGsnAAAAABrDJt3q82c/+1luv/32DBgwoND2mc98Jm3bts0XvvCFTJkypaHqAwDY4lk7AQAAANAYNumKv7fffjvl5eXvae/cubPbVQEA/AtrJwAAAAAawyYFf1VVVRk3blxWrlxZaPv73/+eiy66KFVVVQ1WHABAMbB2AgAAAKAxbNKtPidNmpQjjzwyu+yyS/r06ZMk+d3vfpeysrL86le/atACAQC2dNZOAAAAADSGTQr+evfuneeeey4333xz/vCHPyRJTjjhhJx44olp27ZtgxYIALCls3YCAAAAoDFsUvA3ceLElJeX57TTTqvXfv311+e1117L+eef3yDFAQAUA2snAAAAABrDJj3j77/+67/Ss2fP97TvvffemTp16kcuCgCgmFg7AQAAANAYNin4q6mpSZcuXd7TvtNOO2XJkiUfuSgAgGJi7QQAAABAY9ik4K9r16759a9//Z72X//616msrPzIRQEAFBNrJwAAAAAawyY94++0007L2WefnTVr1uTwww9PksyePTvnnXdevvGNbzRogQAAWzprJwAAAAAawyYFf+eee27eeOON/Od//mdWr16dJGnTpk3OP//8jB49ukELBADY0lk7AQAAANAYNin4KykpyaWXXpoxY8bk2WefTdu2bbPHHnukrKysoesDANjiWTsBAAAA0Bg2Kfh7V7t27XLAAQc0VC0AAEXN2gkAAACAzam0qQsAAAAAAAAAPjrBHwAAAAAAABQBwR8AAAAAAAAUAcEfAAAAAAAAFAHBHwAAAAAAABQBwR8AAAAAAAAUAcEfAAAAAAAAFAHBHwAAAAAAABQBwR8AAAAAAAAUAcEfAAAAAAAAFAHBHwAAAAAAABQBwR8AAAAAAAAUAcEfAAAAAAAAFAHBHwAAAAAAABQBwR8AAAAAAAAUAcEfQAN76KGHcvTRR6eysjIlJSWZOXNmvf6f//znGThwYHbYYYeUlJRkwYIF9fpfeumllJSUrHe77bbbNvi6dXV1GTt2bLp06ZK2bdumuro6zz333GY4QwAAAAAAmiPBH0ADW7FiRfr06ZPJkydvsP+QQw7JpZdeut7+rl27ZsmSJfW2iy66KO3atcvgwYM3+LqXXXZZrrrqqkydOjXz5s3Ltttum0GDBmXlypUNcl4AAAAAADRvLZu6AIBiM3jw4I0GdCeddFKSf1zZtz4tWrRIRUVFvbYZM2bkC1/4Qtq1a7feY+rq6jJp0qRccMEFOeaYY5IkN910U8rLyzNz5swcf/zxm3AmAAAAAABsSVzxB9DMzZ8/PwsWLMjw4cM3OGbRokWpqalJdXV1oa1Dhw7p379/5s6d2xhlAgAAAADQxAR/AM3cddddl7322isHHXTQBsfU1NQkScrLy+u1l5eXF/oAAAAAAChugj+AZuzvf/97pk+fvtGr/QAAAAAAIBH8ATRrt99+e95+++2cfPLJGx337jMBa2tr67XX1ta+53mBAAAAAAAUJ8EfQDN23XXX5bOf/Wx22mmnjY7r0aNHKioqMnv27ELb8uXLM2/evFRVVW3uMgEAAAAAaAZaNnUBAMXmrbfeyvPPP1/YX7RoURYsWJBOnTqlW7duefPNN7N48eK88sorSZKFCxcm+cdVe/98dd7zzz+fhx56KHffffd6X6dnz56ZOHFijj322JSUlOTss8/OxRdfnD322CM9evTImDFjUllZmSFDhmy+kwUAAAAAoNlwxR9AA3v88cez3377Zb/99kuSjBo1Kvvtt1/Gjh2bJLnjjjuy33775aijjkqSHH/88dlvv/0yderUevNcf/312WWXXTJw4MD1vs7ChQuzbNmywv55552Xs846K6effnoOOOCAvPXWW5k1a1batGmzOU4TaAIPPfRQjj766FRWVqakpCQzZ86s13/KKaekpKSk3nbkkUfWG/Pmm2/mxBNPTPv27dOxY8cMHz48b731ViOeBQAAAACbi+APoIENGDAgdXV179mmTZuW5B8fzK+v/8ILL6w3zyWXXJLFixentHT936rr6upyyimnFPZLSkoyfvz41NTUZOXKlbnvvvvy8Y9/fDOdJdAUVqxYkT59+mTy5MkbHHPkkUdmyZIlhe0nP/lJvf4TTzwxTz/9dO69997cddddeeihh3L66adv7tIBAJqVyZMnZ9ddd02bNm3Sv3//PPbYYx/ouFtuuSUlJSXurAIANFtu9QkAsIUYPHhwBg8evNExZWVl9W4b/M+effbZzJo1K7/5zW+y//77J0muvvrqfOYzn8kVV1yRysrKBq8ZAKC5ufXWWzNq1KhMnTo1/fv3z6RJkzJo0KAsXLgwnTt33uBxL730Ur75zW/mk5/8ZCNWCwDw4bjiDwCgiMyZMyedO3fOnnvumTPPPDNvvPFGoW/u3Lnp2LFjIfRLkurq6pSWlmbevHkbnHPVqlVZvnx5vQ0AYEt15ZVX5rTTTsupp56aXr16ZerUqdlmm21y/fXXb/CYtWvX5sQTT8xFF12U3XbbrRGrBQD4cAR/AABF4sgjj8xNN92U2bNn59JLL82DDz6YwYMHZ+3atUmSmpqa9/wWe8uWLdOpU6fU1NRscN6JEyemQ4cOha1r166b9TwAADaX1atXZ/78+amuri60lZaWprq6OnPnzt3gcePHj0/nzp0zfPjw930NvzQFADQlt/oEACgSxx9/fOHPvXv3zr777pvdd989c+bMyRFHHLHJ844ePTqjRo0q7C9fvlz4BwBskV5//fWsXbs25eXl9drLy8vzhz/8Yb3HPPzww7nuuuuyYMGCD/QaEydOzEUXXfRRSwUA2CSu+AMAKFK77bZbdtxxxzz//PNJkoqKirz66qv1xrzzzjt58803N/hcwOQfzw1s3759vQ0AYGvwt7/9LSeddFKuvfba7Ljjjh/omNGjR2fZsmWF7eWXX97MVQIA/D+u+AMAKFJ//vOf88Ybb6RLly5JkqqqqixdujTz589Pv379kiT3339/1q1bl/79+zdlqQAAjWLHHXdMixYtUltbW6+9trZ2vb8I9cILL+Sll17K0UcfXWhbt25dkn/cMn3hwoXZfffd6x1TVlaWsrKyzVA9AMD7c8UfAMAW4q233sqCBQsKt5latGhRFixYkMWLF+ett97Kueeem0cffTQvvfRSZs+enWOOOSYf+9jHMmjQoCTJXnvtlSOPPDKnnXZaHnvssfz617/OyJEjc/zxx6eysrIJzwwAoHG0bt06/fr1y+zZswtt69aty+zZs1NVVfWe8T179syTTz5ZWIMtWLAgn/3sZ3PYYYdlwYIFbn8OADQ7rvgDANhCPP744znssMMK++8+d2/YsGGZMmVKfv/73+fGG2/M0qVLU1lZmYEDB2bChAn1fuP85ptvzsiRI3PEEUektLQ0Q4cOzVVXXdXo5wIA0FRGjRqVYcOGZf/9988nPvGJTJo0KStWrMipp56aJDn55JOz8847Z+LEiWnTpk322Wefesd37NgxSd7TDgDQHAj+AP7F4vG9m7qEZqfb2CebugQ2s4ceeiiXX3555s+fnyVLlmTGjBkZMmRIob+uri7jxo3Ltddem6VLl+bggw/OlClTsscee9Sb55e//GXGjx+f3//+92nTpk0+9alPZebMmRt83Q86L/8wYMCA1NXVbbD/nnvued85OnXqlOnTpzdkWQAAW5Tjjjsur732WsaOHZuampr07ds3s2bNSnl5eZJk8eLFKS11kywAYMtkFQMAZMWKFenTp08mT5683v7LLrssV111VaZOnZp58+Zl2223zaBBg7Jy5crCmJ/97Gc56aSTcuqpp+Z3v/tdfv3rX+eLX/ziRl/3g8wLAAANbeTIkfnTn/6UVatWZd68efWedzxnzpxMmzZtg8dOmzZto7/cBgDQlFzxBwBk8ODBGTx48Hr76urqMmnSpFxwwQU55phjkiQ33XRTysvLM3PmzBx/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YkX69OmTyZMnr7f/sssuy1VXXZWpU6dm3rx52XbbbTNo0KCsXLmyMObEE0/M008/nXvvvTd33XVXHnrooZx++umNdQoAAAAAbEau+AMA2EIMHjw4gwcPXm9fXV1dJk2alAsuuCDHHHNMkuSmm25KeXl5Zs6cmeOPPz7PPvtsZs2ald/85jfZf//9kyRXX311PvOZz+SKK65IZWXleudetWpVVq1aVdhfvnx5A58ZAAAAAA3BFX8AAEVg0aJFqampSXV1daGtQ4cO6d+/f+bOnZskmTt3bjp27FgI/ZKkuro6paWlmTdv3gbnnjhxYjp06FDYunbtuvlOBAAAAIBNJvgDACgCNTU1SZLy8vJ67eXl5YW+mpqadO7cuV5/y5Yt06lTp8KY9Rk9enSWLVtW2F5++eUGrh4AAACAhuBWnwAAbFRZWVnKysqaugwAAAAA3ocr/gAAikBFRUWSpLa2tl57bW1toa+ioiKvvvpqvf533nknb775ZmEMAAAAAFsuwR8AQBHo0aNHKioqMnv27ELb8uXLM2/evFRVVSVJqqqqsnTp0syfP78w5v7778+6devSv3//Rq8ZAAAAgIblVp8AAFuIt956K88//3xhf9GiRVmwYEE6deqUbt265eyzz87FF1+cPfbYIz169MiYMWNSWVmZIUOGJEn22muvHHnkkTnttNMyderUrFmzJiNHjszxxx+fysrKJjorAAAAABqK4A8AYAvx+OOP57DDDivsjxo1KkkybNiwTJs2Leedd15WrFiR008/PUuXLs0hhxySWbNmpU2bNoVjbr755owcOTJHHHFESktLM3To0Fx11VWNfi4AAAAANDzBHwDAFmLAgAGpq6vbYH9JSUnGjx+f8ePHb3BMp06dMn369M1RHgAAAABNzDP+AAAAAAAAoAgI/gAAAAAAAKAICP4AAAAAAACgCAj+AAAAAAAAoAgI/gAAAAAAAKAICP4AAAAAAACgCAj+gAb3l7/8JV/60peyww47pG3btundu3cef/zxQv/Pf/7zDBw4MDvssENKSkqyYMGCDzTvbbfdlp49e6ZNmzbp3bt37r777s10BgAAAAAAsOUR/AEN6q9//WsOPvjgtGrVKv/7v/+bZ555Jt///vez/fbbF8asWLEihxxySC699NIPPO8jjzySE044IcOHD89vf/vbDBkyJEOGDMlTTz21OU4DAAAAAAC2OC2bugCguFx66aXp2rVrbrjhhkJbjx496o056aSTkiQvvfTSB573hz/8YY488sice+65SZIJEybk3nvvzY9+9KNMnTr1oxcOAAAAAABbOFf8AQ3qjjvuyP7775/Pf/7z6dy5c/bbb79ce+21H3neuXPnprq6ul7boEGDMnfu3I88NwAAAAAAFAPBH9CgXnzxxUyZMiV77LFH7rnnnpx55pn52te+lhtvvPEjzVtTU5Py8vJ6beXl5ampqflI8wIAAAAAQLFwq0+gQa1bty77779/LrnkkiTJfvvtl6eeeipTp07NsGHDmrg6AAAAAAAoXq74AxpUly5d0qtXr3pte+21VxYvXvyR5q2oqEhtbW29ttra2lRUVHykeQEAAAAAoFgI/oAGdfDBB2fhwoX12v74xz+me/fuH2neqqqqzJ49u17bvffem6qqqo80LwAAAAAAFAu3+gQa1DnnnJODDjool1xySb7whS/ksccey49//OP8+Mc/Lox58803s3jx4rzyyitJUggKKyoqClfwnXzyydl5550zceLEJMnXv/71fOpTn8r3v//9HHXUUbnlllvy+OOP15sXAAAAAAC2Zq74AxrUAQcckBkzZuQnP/lJ9tlnn0yYMCGTJk3KiSeeWBhzxx13ZL/99stRRx2VJDn++OOz3377ZerUqYUxixcvzpIlSwr7Bx10UKZPn54f//jH6dOnT26//fbMnDkz++yzT+OdHAAAAAAANGOu+AMa3L//+7/n3//93zfYf8opp+SUU07Z6Bxz5sx5T9vnP//5fP7zn/+I1QEAAAAAQHFyxR8AAAAAAAAUAcEfAAAAAAAAFAHBHwAAAAAAABQBwR8AAAAAAAAUAcEfAAAAAAAAFAHBHwAAAAAAABQBwR8AAAAAAAAUAcEfAAAAAFuVyZMnZ9ddd02bNm3Sv3//PPbYYxsce+211+aTn/xktt9++2y//faprq7e6HgAgKbUsqkLAJpWv3NvauoSmp0Z2zV1BQAAAGwut956a0aNGpWpU6emf//+mTRpUgYNGpSFCxemc+fO7xk/Z86cnHDCCTnooIPSpk2bXHrppRk4cGCefvrp7Lzzzk1wBgAAG+aKPwAAAAC2GldeeWVOO+20nHrqqenVq1emTp2abbbZJtdff/16x9988835z//8z/Tt2zc9e/bM//k//yfr1q3L7Nmz1zt+1apVWb58eb0NAKCxCP4AAAAA2CqsXr068+fPT3V1daGttLQ01dXVmTt37gea4+23386aNWvSqVOn9fZPnDgxHTp0KGxdu3ZtkNoBAD4IwR8AAAAAW4XXX389a9euTXl5eb328vLy1NTUfKA5zj///FRWVtYLD//Z6NGjs2zZssL28ssvf+S6AQA+KM/4AwAAAIAP4Hvf+15uueWWzJkzJ23atFnvmLKyspSVlTVyZQAA/yD4AwAAAGCrsOOOO6ZFixapra2t115bW5uKioqNHnvFFVfke9/7Xu67777su+++m7NMAIBN5lafAAAAAGwVWrdunX79+mX27NmFtnXr1mX27Nmpqqra4HGXXXZZJkyYkFmzZmX//fdvjFIBADaJK/4AAAAA2GqMGjUqw4YNy/77759PfOITmTRpUlasWJFTTz01SXLyySdn5513zsSJE5Mkl156acaOHZvp06dn1113LTwLsF27dmnXrl2TnQcAwPoI/gAAAADYahx33HF57bXXMnbs2NTU1KRv376ZNWtWysvLkySLFy9Oaen/u0nWlClTsnr16vzHf/xHvXnGjRuXCy+8sDFLBwB4X4I/AAAAALYqI0eOzMiRI9fbN2fOnHr7L7300uYvCACggXjGHwAAAGyiCy+8MCUlJfW2nj17FvoHDBjwnv4zzjhjo3PW1dVl7Nix6dKlS9q2bZvq6uo899xzm/tUAACAIiD4AwAAgI9g7733zpIlSwrbww8/XK//tNNOq9d/2WWXbXS+yy67LFdddVWmTp2aefPmZdttt82gQYOycuXKzXkaAABAEXCrTwAAAPgIWrZsmYqKig32b7PNNhvt/2d1dXWZNGlSLrjgghxzzDFJkptuuinl5eWZOXNmjj/++AapGQAAKE6u+AMAAICP4LnnnktlZWV22223nHjiiVm8eHG9/ptvvjk77rhj9tlnn4wePTpvv/32BudatGhRampqUl1dXWjr0KFD+vfvn7lz5262cwAAAIqDK/4AAABgE/Xv3z/Tpk3LnnvumSVLluSiiy7KJz/5yTz11FPZbrvt8sUvfjHdu3dPZWVlfv/73+f888/PwoUL8/Of/3y989XU1CRJysvL67WXl5cX+gAAADZE8AcAAACbaPDgwYU/77vvvunfv3+6d++en/70pxk+fHhOP/30Qn/v3r3TpUuXHHHEEXnhhRey++67N0XJAABAEWvWt/q88MILU1JSUm/r2bNnoX/lypUZMWJEdthhh7Rr1y5Dhw5NbW1tE1YMAADA1qxjx475+Mc/nueff369/f3790+SDfa/+yzAf/2/bW1t7Qd+TiAAALD1atbBX5LsvffeWbJkSWF7+OGHC33nnHNO7rzzztx222158MEH88orr+Rzn/tcE1YLAADA1uytt97KCy+8kC5duqy3f8GCBUmywf4ePXqkoqIis2fPLrQtX7488+bNS1VVVYPXCwAAFJdmf6vPli1brve3GpctW5brrrsu06dPz+GHH54kueGGG7LXXnvl0UcfzYEHHrjBOVetWpVVq1YV9pcvX97whQMAAFD0vvnNb+boo49O9+7d88orr2TcuHFp0aJFTjjhhLzwwguZPn16PvOZz2SHHXbI73//+5xzzjk59NBDs++++xbm6NmzZyZOnJhjjz02JSUlOfvss3PxxRdnjz32SI8ePTJmzJhUVlZmyJAhTXeiAADAFqHZX/H33HPPpbKyMrvttltOPPHELF68OEkyf/78rFmzJtXV1YWxPXv2TLdu3TJ37tyNzjlx4sR06NChsHXt2nWzngMAAADF6c9//nNOOOGE7LnnnvnCF76QHXbYIY8++mh22mmntG7dOvfdd18GDhyYnj175hvf+EaGDh2aO++8s94cCxcuzLJlywr75513Xs4666ycfvrpOeCAA/LWW29l1qxZadOmTWOfHgAAsIVp1lf89e/fP9OmTcuee+6ZJUuW5KKLLsonP/nJPPXUU6mpqUnr1q3TsWPHeseUl5enpqZmo/OOHj06o0aNKuwvX75c+AcAAMCHdsstt2ywr2vXrnnwwQffd466urp6+yUlJRk/fnzGjx//kesDAAC2Ls06+Bs8eHDhz/vuu2/69++f7t2756c//Wnatm27yfOWlZWlrKysIUoEAAAAAACAZqHZ3+rzn3Xs2DEf//jH8/zzz6eioiKrV6/O0qVL642pra1d7zMBAQAAAAAAoJhtUcHfW2+9lRdeeCFdunRJv3790qpVq8yePbvQv3DhwixevDhVVVVNWCUAAAAAAAA0vmZ9q89vfvObOfroo9O9e/e88sorGTduXFq0aJETTjghHTp0yPDhwzNq1Kh06tQp7du3z1lnnZWqqqoceOCBTV06AAAAAAAANKpmHfz9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2LXQI488khNOOCHDhw/Pb3/72wwZMiRDhgzJU0891ciVAwC8v6II/q688sqcdtppOfXUU9OrV69MnTo122yzTa6//vqmLg0AoNmxdgIAtmYfdi30wx/+MEceeWTOPffc7LXXXpkwYUL+7d/+LT/60Y8auXIAgPfXsqkL+KhWr16d+fPnZ/To0YW20tLSVFdXZ+7cues9ZtWqVVm1alVhf9myZUmS5cuXf6Ra1q76+0c6vhj9rdXapi6hWfqoX2sNydfte/m6fS9fs82fr9v3+qhft+8eX1dX1xDlNBvNae30Qfg337z53tO8Naef3w3B94PmzfeD5q8xvidsCeunTVkLzZ07N6NGjarXNmjQoMycOXO945ty7QQAbDk219ppiw/+Xn/99axduzbl5eX12svLy/OHP/xhvcdMnDgxF1100Xvau3btullq3Jrt09QFNFcTOzR1BWyEr9v18DXb7Pm6XY8G+rr929/+lg4diuffgLUTDcn3nmbOz28ake8HW4BG/J7QnNdPm7IWqqmpWe/4mpqa9Y63dgIAPow33nijQddOW3zwtylGjx5d7ze11q1blzfffDM77LBDSkpKmrCy4rJ8+fJ07do1L7/8ctq3b9/U5cAH4uuWLZGv282jrq4uf/vb31JZWdnUpTQ5ayfWx/ce4F2+H/Au66d/+Ne109KlS9O9e/csXry42QaiWzPfw5o/71Hz5v1p3rw/zduyZcvSrVu3dOrUqUHn3eKDvx133DEtWrRIbW1tvfba2tpUVFSs95iysrKUlZXVa+vYsePmKnGr1759e99U2OL4umVL5Ou24RXjBzPWTjQ033uAd/l+QNL810+bshaqqKj4yGun5B9/N/6NNF++hzV/3qPmzfvTvHl/mrfS0tKGna9BZ2sCrVu3Tr9+/TJ79uxC27p16zJ79uxUVVU1YWUAAM2PtRMAsDXblLVQVVVVvfFJcu+991o7AQDN0hZ/xV+SjBo1KsOGDcv++++fT3ziE5k0aVJWrFiRU089talLAwBodqydAICt2futhU4++eTsvPPOmThxYpLk61//ej71qU/l+9//fo466qjccsstefzxx/PjH/+4KU8DAGC9iiL4O+644/Laa69l7NixqampSd++fTNr1qz3PHiZxlVWVpZx48at9/YW0Fz5umVL5OuWD8vaiYbgew/wLt8P2NK831po8eLF9W65ddBBB2X69Om54IIL8u1vfzt77LFHZs6cmX322ecDvZ5/I82b96f58x41b96f5s3707xtrvenpK6urq5BZwQAAAAAAAAa3Rb/jD8AAAAAAABA8AcAAAAAAABFQfAHAAAAAAAARUDwxxZpzpw5KSkpydKlS5u6FAAAAAAAgGZB8EdOOeWUlJSU5Hvf+1699pkzZ6akpKSJqoLN67XXXsuZZ56Zbt26paysLBUVFRk0aFC++93vpqSkZKPbnDlzmrp8tgKnnHJKhgwZUtj//ve/n+233z4rV658z9i333477du3z1VXXZUk2XXXXTNp0qT3jLvwwgvTt2/fzVQxsDWwbgTeVVdXl+rq6gwaNOg9fddcc006duyYP//5z01QGTSNyZMnZ9ddd02bNm3Sv3//PPbYYxsdf9ttt6Vnz55p06ZNevfunbvvvruRKt06fZj359prr80nP/nJbL/99tl+++1TXV39vu8nH92H/Tf0rltuuSUlJSX1/v9Mw/uw78/SpUszYsSIdOnSJWVlZfn4xz/u+9xm9GHfn0mTJmXPPfdM27Zt07Vr15xzzjnr/byJj+6hhx7K0UcfncrKypSUlGTmzJnve8ycOXPyb//2bykrK8vHPvaxTJs27UO/ruCPJEmbNm1y6aWX5q9//WuDzbl69eoGmwsa2tChQ/Pb3/42N954Y/74xz/mjjvuyIABA9K7d+8sWbKksH3hC1/IkUceWa/toIMOaury2QqddNJJWbFiRX7+85+/p+/222/P6tWr86UvfakJKgO2Nptj3QhseUpKSnLDDTdk3rx5+a//+q9C+6JFi3Leeefl6quvzi677NKEFULjufXWWzNq1KiMGzcuTzzxRPr06ZNBgwbl1VdfXe/4Rx55JCeccEKGDx+e3/72txkyZEiGDBmSp556qpEr3zp82Pdnzpw5OeGEE/LAAw9k7ty56dq1awYOHJi//OUvjVz51uPDvkfveumll/LNb34zn/zkJxup0q3Th31/Vq9enU9/+tN56aWXcvvtt2fhwoW59tprs/POOzdy5VuHD/v+TJ8+Pd/61rcybty4PPvss7nuuuty66235tvf/nYjV751WLFiRfr06ZPJkyd/oPGLFi3KUUcdlcMOOywLFizI2Wefna985Su55557PtwL17HVGzZsWN2///u/1/Xs2bPu3HPPLbTPmDGj7p+/RG6//fa6Xr161bVu3bque/fudVdccUW9ebp37143fvz4upNOOqluu+22qxs2bFjdDTfcUNehQ4e6O++8s+7jH/94Xdu2beuGDh1at2LFirpp06bVde/eva5jx451Z511Vt0777xTmOumm26q69evX127du3qysvL60444YS62traQv8DDzxQl6Tur3/96+b7i6Fo/fWvf61LUjdnzpz3HTts2LC6Y445ZvMXBf9ifV97n/vc5+qOOOKI94z91Kc+VXfccccV9rt37173gx/84D3jxo0bV9enT58GrhTYmnzQdSOw9Zg2bVpdu3bt6l588cW6devW1R122GF1xx57bFOXBY3qE5/4RN2IESMK+2vXrq2rrKysmzhx4nrHf+ELX6g76qij6rX179+/7qtf/epmrXNr9WHfn3/1zjvv1G233XZ1N9544+Yqcau3Ke/RO++8U3fQQQfV/Z//8398drOZfdj3Z8qUKXW77bZb3erVqxurxK3ah31/RowYUXf44YfXaxs1alTdwQcfvFnrpK4uSd2MGTM2Oua8886r23vvveu1HXfccXWDBg36UK/lij+SJC1atMgll1ySq6++er23Y5k/f36+8IUv5Pjjj8+TTz6ZCy+8MGPGjHnPZaZXXHFF+vTpk9/+9rcZM2ZMkn/cgu6qq67KLbfcklmzZmXOnDk59thjc/fdd+fuu+/Of//3f+e//uu/cvvttxfmWbNmTSZMmJDf/e53mTlzZl566aWccsopm/OvgK1Iu3bt0q5du8ycOTOrVq1q6nLgAxs+fHjuv//+/OlPfyq0vfjii3nooYcyfPjwJqwM2Jq837oR2LoMGzYsRxxxRL785S/nRz/6UZ566ql6VwBCsVu9enXmz5+f6urqQltpaWmqq6szd+7c9R4zd+7ceuOTZNCgQRscz6bblPfnX7399ttZs2ZNOnXqtLnK3Kpt6ns0fvz4dO7c2f+FN7NNeX/uuOOOVFVVZcSIESkvL88+++yTSy65JGvXrm2ssrcam/L+HHTQQZk/f37hdqAvvvhi7r777nzmM59plJrZuIZaI7RsyKLYsh177LHp27dvxo0bl+uuu65e35VXXpkjjjiiEOZ9/OMfzzPPPJPLL7+8XiB3+OGH5xvf+EZh///+3/+bNWvWZMqUKdl9992TJP/xH/+R//7v/05tbW3atWuXXr165bDDDssDDzyQ4447Lkny5S9/uTDHbrvtlquuuioHHHBA3nrrrbRr125z/RWwlWjZsmWmTZuW0047LVOnTs2//du/5VOf+lSOP/747Lvvvk1dHmzQoEGDUllZmRtuuCEXXnhhkmTatGnp2rVrjjjiiHpjzz///FxwwQX12lavXp1evXo1VrlAEdvYuhHY+vz4xz/O3nvvnYceeig/+9nPstNOOzV1SdBoXn/99axduzbl5eX12svLy/OHP/xhvcfU1NSsd3xNTc1mq3NrtSnvz786//zzU1lZ+Z4PYmkYm/IePfzww7nuuuuyYMGCRqhw67Yp78+LL76Y+++/PyeeeGLuvvvuPP/88/nP//zPrFmzJuPGjWuMsrcam/L+fPGLX8zrr7+eQw45JHV1dXnnnXdyxhlnuNVnM7GhNcLy5cvz97//PW3btv1A87jij3ouvfTS3HjjjXn22WfrtT/77LM5+OCD67UdfPDBee655+r9tsb+++//njm32WabQuiX/OMLddddd60X4JWXl9e77/D8+fNz9NFHp1u3btluu+3yqU99KkmyePHij3aC8P8bOnRoXnnlldxxxx058sgjCw9N3ZSHpUJjadGiRYYNG5Zp06alrq4u69aty4033phTTz01paX1f6Sfe+65WbBgQb3tjDPOaKLKgWK0oXUjsPXp3LlzvvrVr2avvfbKkCFDmrocgAbzve99L7fccktmzJiRNm3aNHU5JPnb3/6Wk046Kddee2123HHHpi6H9Vi3bl06d+6cH//4x+nXr1+OO+64fOc738nUqVObujTyj+eYXnLJJbnmmmvyxBNP5Oc//3l++ctfZsKECU1dGg1I8Ec9hx56aAYNGpTRo0dv0vHbbrvte9patWpVb7+kpGS9bevWrUvyjwdeDho0KO3bt8/NN9+c3/zmN5kxY0aSf1ytAg2lTZs2+fSnP50xY8bkkUceySmnnOI3j2j2vvzlL2fx4sW5//77M3v27Lz88ss59dRT3zNuxx13zMc+9rF6m1vTAA3po64bgeLSsmXLtGzppkJsfXbccce0aNEitbW19dpra2tTUVGx3mMqKio+1Hg23aa8P++64oor8r3vfS+/+tWv3B1oM/qw79ELL7yQl156KUcffXThZ89NN92UO+64Iy1btswLL7zQWKVvFTbl31CXLl3y8Y9/PC1atCi0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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["We can further notice how skewed the dataset is towards male patients.\n","\n","* Only **50 female patients **in the dataset have been diagnosed with heart disease.\n","\n","* A significant number of patients, 392, diagnosed with heart disease have asymptomatic (ASY) chest pain. While chest pain could be a relevant feature for our model, asymptomatic implies that those patients who had a heart disease did not have chest pain as a symptom.\n","\n","* **A high number (170**) of patients with blood sugar greater than 120 mg/dl were diagnosed with heart disease in relation to those who were not diagnosed as such.\n","\n","* Out of all patients who had an exercise-induced angina, **316** were diagnosed with a heart disease.\n","\n","* Out of all patients with a `flat ST slope`,** 381** were diagnosed with a heart disease.\n","\n","* Looking at the data distribution from the above plots, we can start to identify some features that could be relevant to us. We will clean up the dataset a bit first before narrowing down on our features."],"metadata":{"id":"6-67-w6PbDGo"}},{"cell_type":"markdown","source":["#Cleaning Dataset\n","\n","We identified that there are no missing values. However, as we noticed earlier, a couple of columns have 0 values that don't make sense.\n","\n","Let's\n","\n","1 - Count the number of rows that have a 0 value for `RestingBP`.\n","\n","2- Count the number of rows that have a 0 value for `Cholesterol`."],"metadata":{"id":"WAXVfvtlb-E9"}},{"cell_type":"code","source":["print(hdp_data[hdp_data['RestingBP']==0]['RestingBP'].value_counts(),'\\n')\n","\n","print(hdp_data[hdp_data['Cholesterol']==0]['Cholesterol'].value_counts())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w6I4zl-jcMWO","executionInfo":{"status":"ok","timestamp":1740929010878,"user_tz":180,"elapsed":9,"user":{"displayName":"Tomaz Filgueira","userId":"15508579070858102815"}},"outputId":"b1484cb6-907c-4de1-f87f-e1a416750e6f"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["RestingBP\n","0    1\n","Name: count, dtype: int64 \n","\n","Cholesterol\n","0    172\n","Name: count, dtype: int64\n"]}]},{"cell_type":"markdown","source":["There are only one row with **0** `RestingBP` - we could remove it without any problem\n","\n","There are **172 rows** with 0 value in `Cholesterol` Column\n","\n","To be more accurate, we will replace the zero values in `Cholesterol` in relation to `HeartDisease`.\n","\n","So, the 0 values in `Cholesterol` for patients who were diagnosed with a heart disease will be replaced by the median of the non-zero values for patients who were diagnosed with a heart disase. And we'll do the same for those who were not diagnosed with a heart disease."],"metadata":{"id":"P88nQ5DudLOy"}},{"cell_type":"code","source":["hdp_data_clean = hdp_data[hdp_data['RestingBP'] != 0].copy()\n","\n","#Replecing Cholesterol 0 with median\n","heartdisease_mask = hdp_data_clean[\"HeartDisease\"]==0\n","\n","cholesterol_without_heartdisease = hdp_data_clean.loc[heartdisease_mask, \"Cholesterol\"]\n","cholesterol_with_heartdisease = hdp_data_clean.loc[~heartdisease_mask, \"Cholesterol\"]\n","\n","hdp_data_clean.loc[heartdisease_mask, \"Cholesterol\"] = cholesterol_without_heartdisease.replace(to_replace = 0, value = cholesterol_without_heartdisease.median())\n","hdp_data_clean.loc[~heartdisease_mask, \"Cholesterol\"] = cholesterol_with_heartdisease.replace(to_replace = 0, value = cholesterol_with_heartdisease.median())"],"metadata":{"id":"pLt2m2v0ckon","executionInfo":{"status":"ok","timestamp":1740932697083,"user_tz":180,"elapsed":4,"user":{"displayName":"Tomaz Filgueira","userId":"15508579070858102815"}}},"execution_count":117,"outputs":[]},{"cell_type":"markdown","source":["##Converting Categorical Columns to Dummies"],"metadata":{"id":"OQvqpJ1ZiNka"}},{"cell_type":"code","source":["#convert categorical columns to dummies in hdp_data_clean\n","#hdp_data_clean = pd.get_dummies(hdp_data_clean,columns=['Sex', 'ChestPainType', 'RestingECG', 'ExerciseAngina', 'ST_Slope'],drop_first=True)\n","\n","hdp_data_clean = pd.get_dummies(hdp_data_clean,\n","                               drop_first=True,dtype=float)\n","\n","hdp_data_clean.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"zxU8bzVOiRO0","executionInfo":{"status":"ok","timestamp":1740932698398,"user_tz":180,"elapsed":47,"user":{"displayName":"Tomaz Filgueira","userId":"15508579070858102815"}},"outputId":"49472267-aa3f-4e5e-c4a6-6e8cb08a77df"},"execution_count":118,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Age  RestingBP  Cholesterol  FastingBS  MaxHR  Oldpeak  HeartDisease  \\\n","0   40        140          289          0    172      0.0             0   \n","1   49        160          180          0    156      1.0             1   \n","2   37        130          283          0     98      0.0             0   \n","3   48        138          214          0    108      1.5             1   \n","4   54        150          195          0    122      0.0             0   \n","\n","   Sex_M  ChestPainType_ATA  ChestPainType_NAP  ChestPainType_TA  \\\n","0    1.0                1.0                0.0               0.0   \n","1    0.0                0.0                1.0               0.0   \n","2    1.0                1.0                0.0               0.0   \n","3    0.0                0.0                0.0               0.0   \n","4    1.0                0.0                1.0               0.0   \n","\n","   RestingECG_Normal  RestingECG_ST  ExerciseAngina_Y  ST_Slope_Flat  \\\n","0                1.0            0.0               0.0            0.0   \n","1                1.0            0.0               0.0            1.0   \n","2                0.0            1.0               0.0            0.0   \n","3                1.0            0.0               1.0            1.0   \n","4                1.0            0.0               0.0            0.0   \n","\n","   ST_Slope_Up  \n","0          1.0  \n","1          0.0  \n","2          1.0  \n","3          0.0  \n","4          1.0  "],"text/html":["\n","  <div id=\"df-6623befe-9c66-43bd-a8c8-8aa8e7acbce8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>RestingBP</th>\n","      <th>Cholesterol</th>\n","      <th>FastingBS</th>\n","      <th>MaxHR</th>\n","      <th>Oldpeak</th>\n","      <th>HeartDisease</th>\n","      <th>Sex_M</th>\n","      <th>ChestPainType_ATA</th>\n","      <th>ChestPainType_NAP</th>\n","      <th>ChestPainType_TA</th>\n","      <th>RestingECG_Normal</th>\n","      <th>RestingECG_ST</th>\n","      <th>ExerciseAngina_Y</th>\n","      <th>ST_Slope_Flat</th>\n","      <th>ST_Slope_Up</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>40</td>\n","      <td>140</td>\n","      <td>289</td>\n","      <td>0</td>\n","      <td>172</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>49</td>\n","      <td>160</td>\n","      <td>180</td>\n","      <td>0</td>\n","      <td>156</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>37</td>\n","      <td>130</td>\n","      <td>283</td>\n","      <td>0</td>\n","      <td>98</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>48</td>\n","      <td>138</td>\n","      <td>214</td>\n","      <td>0</td>\n","      <td>108</td>\n","      <td>1.5</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>54</td>\n","      <td>150</td>\n","      <td>195</td>\n","      <td>0</td>\n","      <td>122</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6623befe-9c66-43bd-a8c8-8aa8e7acbce8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6623befe-9c66-43bd-a8c8-8aa8e7acbce8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6623befe-9c66-43bd-a8c8-8aa8e7acbce8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-550f5efe-5f31-4ae1-bc7a-a49b9686c9f0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-550f5efe-5f31-4ae1-bc7a-a49b9686c9f0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-550f5efe-5f31-4ae1-bc7a-a49b9686c9f0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"hdp_data_clean","summary":"{\n  \"name\": \"hdp_data_clean\",\n  \"rows\": 917,\n  \"fields\": [\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 28,\n        \"max\": 77,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          44,\n          68,\n          66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RestingBP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17,\n        \"min\": 80,\n        \"max\": 200,\n        \"num_unique_values\": 66,\n        \"samples\": [\n          172,\n          117,\n          140\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cholesterol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 54,\n        \"min\": 85,\n        \"max\": 603,\n        \"num_unique_values\": 221,\n        \"samples\": [\n          226,\n          491,\n          393\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FastingBS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MaxHR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 60,\n        \"max\": 202,\n        \"num_unique_values\": 119,\n        \"samples\": [\n          132,\n          157\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Oldpeak\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0669599756520682,\n        \"min\": -2.6,\n        \"max\": 6.2,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          1.3,\n          0.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HeartDisease\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex_M\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.40786414913925706,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ChestPainType_ATA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.39145073664240426,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ChestPainType_NAP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.41466396965583413,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ChestPainType_TA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2184014858494626,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RestingECG_Normal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.489986300129281,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RestingECG_ST\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.39573076597891493,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ExerciseAngina_Y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.49107844444781257,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ST_Slope_Flat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5002725538496214,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ST_Slope_Up\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4954517818414753,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":118}]},{"cell_type":"markdown","source":["##Correlation and Best Features"],"metadata":{"id":"0OoRV_Y5hux9"}},{"cell_type":"code","source":["correlations = abs(hdp_data_clean.corr())\n","\n","# Identify top 5 features, excluding y itself, that correlate strongly with y.\n","print(correlations[\"HeartDisease\"].sort_values(ascending=False))\n","top_5_features = correlations[\"HeartDisease\"].sort_values(ascending=False)[1:6].index\n","print(top_5_features)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9iXWNLRgemvP","executionInfo":{"status":"ok","timestamp":1740932528255,"user_tz":180,"elapsed":24,"user":{"displayName":"Tomaz Filgueira","userId":"15508579070858102815"}},"outputId":"0bb14a65-8f35-48e2-9967-8268d59c3677"},"execution_count":113,"outputs":[{"output_type":"stream","name":"stdout","text":["HeartDisease         1.000000\n","ST_Slope_Up          0.621843\n","ST_Slope_Flat        0.553700\n","ExerciseAngina_Y     0.495490\n","Oldpeak              0.403638\n","ChestPainType_ATA    0.401680\n","MaxHR                0.401410\n","Sex_M                0.305118\n","Age                  0.282012\n","FastingBS            0.267994\n","ChestPainType_NAP    0.215311\n","RestingBP            0.117990\n","RestingECG_ST        0.103067\n","RestingECG_Normal    0.092452\n","ChestPainType_TA     0.054591\n","Cholesterol          0.024914\n","Name: HeartDisease, dtype: float64\n","Index(['ST_Slope_Up', 'ST_Slope_Flat', 'ExerciseAngina_Y', 'Oldpeak',\n","       'ChestPainType_ATA'],\n","      dtype='object')\n"]}]},{"cell_type":"markdown","source":["We found out that the top 5 features which best correlates with HeartDisease are:\n","\n","`'ST_Slope_Up',`\n","\n","`'ST_Slope_Flat',`\n","\n","`'ExerciseAngina_Y',`\n","\n","`'Oldpeak'`,\n","\n","`'ChestPainType_ATA'`"],"metadata":{"id":"Wg3XgaZTis9e"}},{"cell_type":"markdown","source":["## Converting"],"metadata":{"id":"MOJEleEYpDSf"}},{"cell_type":"markdown","source":["# Creating train dataset\n","\n","Next, we will create and train multiple models using one of those features at a time.\n","\n","'ST_Slope_Up',\n","\n","'ST_Slope_Flat',\n","\n","'ExerciseAngina_Y',\n","\n","'Oldpeak',\n","\n","'Sex_M'\n","\n","\n","\n"],"metadata":{"id":"O4fnK9i_jEaW"}},{"cell_type":"code","source":["X=hdp_data_clean.drop(['HeartDisease'],axis=1)\n","y=hdp_data_clean['HeartDisease']\n","\n","#split train , test set\n","X_train, X_test, y_train, y_test  = train_test_split(X, y, test_size=0.20, random_state=417)\n","X_train\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"OJ9qt-lSkIVG","executionInfo":{"status":"ok","timestamp":1740935465585,"user_tz":180,"elapsed":208,"user":{"displayName":"Tomaz Filgueira","userId":"15508579070858102815"}},"outputId":"2e365398-eb75-4919-c7fb-5efa3e8eb43b"},"execution_count":139,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Age  RestingBP  Cholesterol  FastingBS  MaxHR  Oldpeak  Sex_M  \\\n","645   57        128          229          0    150      0.4    1.0   \n","149   54        130          603          1    125      1.0    1.0   \n","143   53        140          243          0    155      0.0    1.0   \n","42    35        150          264          0    168      0.0    1.0   \n","847   45        115          260          0    185      0.0    1.0   \n","..   ...        ...          ...        ...    ...      ...    ...   \n","242   55        160          292          1    143      2.0    1.0   \n","570   56        128          223          0    119      2.0    1.0   \n","468   62        152          153          0     97      1.6    1.0   \n","331   56        115          217          1     82     -1.0    1.0   \n","628   61        134          234          0    145      2.6    1.0   \n","\n","     ChestPainType_ATA  ChestPainType_NAP  ChestPainType_TA  \\\n","645                0.0                1.0               0.0   \n","149                0.0                0.0               0.0   \n","143                0.0                0.0               0.0   \n","42                 1.0                0.0               0.0   \n","847                0.0                0.0               0.0   \n","..                 ...                ...               ...   \n","242                1.0                0.0               0.0   \n","570                0.0                0.0               0.0   \n","468                0.0                0.0               0.0   \n","331                0.0                0.0               0.0   \n","628                0.0                0.0               1.0   \n","\n","     RestingECG_Normal  RestingECG_ST  ExerciseAngina_Y  ST_Slope_Flat  \\\n","645                0.0            0.0               0.0            1.0   \n","149                1.0            0.0               1.0            1.0   \n","143                1.0            0.0               0.0            0.0   \n","42                 1.0            0.0               0.0            0.0   \n","847                0.0            0.0               0.0            0.0   \n","..                 ...            ...               ...            ...   \n","242                1.0            0.0               1.0            1.0   \n","570                0.0            1.0               1.0            0.0   \n","468                0.0            1.0               1.0            0.0   \n","331                0.0            1.0               0.0            0.0   \n","628                1.0            0.0               0.0            1.0   \n","\n","     ST_Slope_Up  \n","645          0.0  \n","149          0.0  \n","143          1.0  \n","42           1.0  \n","847          1.0  \n","..           ...  \n","242          0.0  \n","570          0.0  \n","468          1.0  \n","331          1.0  \n","628          0.0  \n","\n","[733 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-9533fbca-2315-448a-90bd-9cb64969f0e3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>RestingBP</th>\n","      <th>Cholesterol</th>\n","      <th>FastingBS</th>\n","      <th>MaxHR</th>\n","      <th>Oldpeak</th>\n","      <th>Sex_M</th>\n","      <th>ChestPainType_ATA</th>\n","      <th>ChestPainType_NAP</th>\n","      <th>ChestPainType_TA</th>\n","      <th>RestingECG_Normal</th>\n","      <th>RestingECG_ST</th>\n","      <th>ExerciseAngina_Y</th>\n","      <th>ST_Slope_Flat</th>\n","      <th>ST_Slope_Up</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>645</th>\n","      <td>57</td>\n","      <td>128</td>\n","      <td>229</td>\n","      <td>0</td>\n","      <td>150</td>\n","      <td>0.4</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>54</td>\n","      <td>130</td>\n","      <td>603</td>\n","      <td>1</td>\n","      <td>125</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>143</th>\n","      <td>53</td>\n","      <td>140</td>\n","      <td>243</td>\n","      <td>0</td>\n","      <td>155</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>35</td>\n","      <td>150</td>\n","      <td>264</td>\n","      <td>0</td>\n","      <td>168</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>847</th>\n","      <td>45</td>\n","      <td>115</td>\n","      <td>260</td>\n","      <td>0</td>\n","      <td>185</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>242</th>\n","      <td>55</td>\n","      <td>160</td>\n","      <td>292</td>\n","      <td>1</td>\n","      <td>143</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>570</th>\n","      <td>56</td>\n","      <td>128</td>\n","      <td>223</td>\n","      <td>0</td>\n","      <td>119</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>468</th>\n","      <td>62</td>\n","      <td>152</td>\n","      <td>153</td>\n","      <td>0</td>\n","      <td>97</td>\n","      <td>1.6</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>331</th>\n","      <td>56</td>\n","      <td>115</td>\n","      <td>217</td>\n","      <td>1</td>\n","      <td>82</td>\n","      <td>-1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>628</th>\n","      <td>61</td>\n","      <td>134</td>\n","      <td>234</td>\n","      <td>0</td>\n","      <td>145</td>\n","      <td>2.6</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>733 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9533fbca-2315-448a-90bd-9cb64969f0e3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9533fbca-2315-448a-90bd-9cb64969f0e3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9533fbca-2315-448a-90bd-9cb64969f0e3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8b4dbedf-a38d-4ead-8759-704ee3ea54d1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8b4dbedf-a38d-4ead-8759-704ee3ea54d1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8b4dbedf-a38d-4ead-8759-704ee3ea54d1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_27b7dfc7-54e4-45f7-b891-b62e76a50a88\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_train')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_27b7dfc7-54e4-45f7-b891-b62e76a50a88 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_train');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_train","summary":"{\n  \"name\": \"X_train\",\n  \"rows\": 733,\n  \"fields\": [\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 28,\n        \"max\": 77,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          62,\n          31,\n          64\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RestingBP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17,\n        \"min\": 80,\n        \"max\": 200,\n        \"num_unique_values\": 61,\n        \"samples\": [\n          128,\n          120,\n          133\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cholesterol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 54,\n        \"min\": 85,\n        \"max\": 603,\n        \"num_unique_values\": 204,\n        \"samples\": [\n          358,\n          277,\n          168\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FastingBS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MaxHR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 60,\n        \"max\": 202,\n        \"num_unique_values\": 117,\n        \"samples\": [\n          117,\n          185\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Oldpeak\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0660685068487026,\n        \"min\": -2.6,\n        \"max\": 5.6,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          4.0,\n          -1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex_M\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4066794095489134,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ChestPainType_ATA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3889995437048397,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ChestPainType_NAP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4179348743388154,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ChestPainType_TA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.21625198947768387,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RestingECG_Normal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.49152457083085616,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RestingECG_ST\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.40270964380899427,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ExerciseAngina_Y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.49277425972618377,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ST_Slope_Flat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5003372229240315,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ST_Slope_Up\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.49457127895614666,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":139}]},{"cell_type":"markdown","source":["# Create Knn model - single feature"],"metadata":{"id":"C6zsDMvxrgj7"}},{"cell_type":"code","source":["#Creating the features columns to be used in the train,test dataset\n","features = [\"ST_Slope_Up\",\"ST_Slope_Flat\",\"ExerciseAngina_Y\",\"Oldpeak\",\"Sex_M\"]\n","accuracy = {}\n","for feature in features:\n","    knn = KNeighborsClassifier(n_neighbors=3)\n","    knn.fit(X_train[[feature]],y_train)\n","    accuracy[feature] = knn.score(X_test[[feature]],y_test)\n","\n","for key, value in accuracy.items():\n","    print(f\"{key}: {value}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Iu-wmWddrkIT","executionInfo":{"status":"ok","timestamp":1740935468006,"user_tz":180,"elapsed":64,"user":{"displayName":"Tomaz Filgueira","userId":"15508579070858102815"}},"outputId":"8a3c0efa-d197-4912-ab20-edc3bba2e35d"},"execution_count":140,"outputs":[{"output_type":"stream","name":"stdout","text":["ST_Slope_Up: 0.8097826086956522\n","ST_Slope_Flat: 0.782608695652174\n","ExerciseAngina_Y: 0.7119565217391305\n","Oldpeak: 0.7065217391304348\n","Sex_M: 0.5597826086956522\n"]}]},{"cell_type":"markdown","source":["Our best forming model, with an accuracy of **~82%**, was trained on the `ST_Slope_Flat` feature with `ExerciseAngina_Y` being a close second. These make sense given the data distributions we saw previously."],"metadata":{"id":"-8AGXP84uQXc"}},{"cell_type":"markdown","source":["# Create Knn model - Multiple feature"],"metadata":{"id":"6BcBnRTj1-sp"}},{"cell_type":"markdown","source":["## Scalar MinMax()\n","\n","In order to use multiple features, it is necessary to scale in a range of 0-1 all columns\n","\n"],"metadata":{"id":"0x_XxSyJ2OHy"}},{"cell_type":"code","source":["scaler = MinMaxScaler()\n","X_train_scaled = scaler.fit_transform(X_train[features])\n","X_test_scaled = scaler.transform(X_test[features])"],"metadata":{"id":"8q2xUM0hoKhK","executionInfo":{"status":"ok","timestamp":1740935713509,"user_tz":180,"elapsed":36,"user":{"displayName":"Tomaz Filgueira","userId":"15508579070858102815"}}},"execution_count":143,"outputs":[]},{"cell_type":"markdown","source":["##Evaluating accuracy"],"metadata":{"id":"NQd9cmuz2cce"}},{"cell_type":"code","source":["knn = KNeighborsClassifier(n_neighbors = 3)\n","knn.fit(X_train_scaled, y_train)\n","accuracy = knn.score(X_test_scaled, y_test)\n","print(f\"Accuracy: {accuracy*100:.2f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"txpuLxkq2giO","executionInfo":{"status":"ok","timestamp":1740935736702,"user_tz":180,"elapsed":48,"user":{"displayName":"Tomaz Filgueira","userId":"15508579070858102815"}},"outputId":"d945050a-1ac2-4a85-db17-0d21fb4ea051"},"execution_count":145,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 84.24\n"]}]},{"cell_type":"markdown","source":["The model's accuracy jumped to ~84%! That's not a significant improvement, but still a good start. Using all these features results in an improved model, but, let's see what parameters/hyperparameters might be optimal."],"metadata":{"id":"H-kWwHGT213Z"}},{"cell_type":"markdown","source":["##Hyperparameter Tunning\n","\n","1- Create a dictionary that stores the parameters and values you want to search over as key-value pairs.\n","\n","2 - Instantiate a k-NN model.\n","\n","3 - Create a `GridSearchCV` instance using the above model and the dictionary."],"metadata":{"id":"fv5kIRp627OL"}},{"cell_type":"markdown","source":["## Premisses\n","\n","We will use grid search to explore the following range of values for a couple of hyperparameters:\n","\n","For k (n_neighbors in scikit-learn) we will use values in the range of 1 to 20.\n","\n","We will use two distance `metrics - minkwoski` and `manhattan`.\n","\n","minkwoski is the default metric for KNeighborsClassifier in sklearn, so we don't expect manhattan to do better. But, let's see what happens!"],"metadata":{"id":"idWHT_0o46SC"}},{"cell_type":"code","source":["#Create the dictonary with parameters to optimze\n","grid_params = {\"n_neighbors\": range(1, 20),\n","\"metric\": [\"minkowski\", \"manhattan\"]\n","}\n","\n","#Knn model\n","knn = KNeighborsClassifier()\n","\n","#Gridsearch Instance\n","knn_grid = GridSearchCV(knn, grid_params, scoring=\"accuracy\")\n","\n","#Grid fit\n","knn_grid.fit(X_train_scaled, y_train)\n","\n","#Knn best estimator Score\n","print(knn_grid.best_estimator_.score(X_test_scaled, y_test))\n","\n","#Best Parameters\n","print(knn_grid.best_params_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DxtzKxlE3Qi3","executionInfo":{"status":"ok","timestamp":1740936336005,"user_tz":180,"elapsed":3097,"user":{"displayName":"Tomaz Filgueira","userId":"15508579070858102815"}},"outputId":"1d662acf-801f-4f27-a111-afa7a8adf39d"},"execution_count":152,"outputs":[{"output_type":"stream","name":"stdout","text":["0.8532608695652174\n","{'metric': 'minkowski', 'n_neighbors': 17}\n"]}]},{"cell_type":"markdown","source":["Our best model had an accuracy of ~85% with 17 n_neighbors and minkowski as the distance metric."],"metadata":{"id":"fVVutaaT5bpF"}},{"cell_type":"code","source":[],"metadata":{"id":"aLMKqufH5jeF"},"execution_count":null,"outputs":[]}]}